var geosite={init:{},directives:{},controllers:{},filters:{},vecmath:{},tilemath:{},api:{}};geosite.init.intents=function(){$("body").on("click",".geosite-intent",function(e){e.preventDefault();var t=$(this),a=angular.element("[ng-controller="+t.data("intent-ctrl")+"]").scope();if(t.hasClass("geosite-toggle"))t.hasClass("geosite-off")?(t.removeClass("geosite-off"),geosite.api.intend(t.data("intent-names")[0],t.data("intent-data"),a)):(t.addClass("geosite-off"),geosite.api.intend(t.data("intent-names")[1],t.data("intent-data"),a));else if(t.hasClass("geosite-radio")){var n=t.parents(".geosite-radio-group:first").find(".geosite-radio").not(t);t.hasClass("geosite-on")||(t.addClass("geosite-on"),t.data("intent-class-on")&&(t.addClass(t.data("intent-class-on")),n.removeClass(t.data("intent-class-on"))),n.removeClass("geosite-on"),t.data("intent-class-off")&&(t.removeClass(t.data("intent-class-off")),n.addClass(t.data("intent-class-off"))),geosite.api.intend(t.data("intent-name"),t.data("intent-data"),a))}else geosite.api.intend(t.data("intent-name"),t.data("intent-data"),a)})},geosite.api.welcome=function(e){e=e||{};var t=e.$scope||e.scope||angular.element("#geosite-main").scope(),a={id:"geosite-modal-welcome",dynamic:{},"static":{welcome:t.map_config.welcome}};geosite.api.intend("toggleModal",a,t)},geosite.api.intend=function(e,t,a){a.$emit(e,t)},geosite.assert_float=function(e,t){return void 0===e||""===e?t:angular.isNumber(e)?e:parseFloat(e)},geosite.assert_array_length=function(e,t,a){return void 0===e||""===e?a:angular.isString(e)?(e=e.split(","),e.length==t?e:a):angular.isArray(e)?e.length==t?e:a:void 0},geosite.controllers.controller_base=function(e,t){},geosite.init_controller_base=function(e){e.controller("GeositeControllerBase",geosite.controllers.controller_base)},geosite.init_controller=function(e,t,a){var n=e.data("controllerName");e.data("controllerType");t.controller(n,a||geosite.controllers.controller_base)},geosite.init_controllers=function(e,t,a){for(var n=0;n<a.length;n++){var i=a[n];$(i.selector,e).each(function(){try{geosite.init_controller($(this),t,i.controller)}catch(e){console.log('Could not load Geosite Controller "'+i.selector+'"',e)}})}},geosite.vecmath={},geosite.vecmath.distance=function(e,t){var a=L.Projection.SphericalMercator;if(void 0!=t.toString&&t.toString().startsWith("LatLng"))return a.project(e).distanceTo(a.project(t));var n=void 0;return $.each(t._layers,function(t,i){var o=i._latlngs,r=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(o[r]),a.project(o[r+1])),r++);r<o.length-1;r++){var l=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(o[r]),a.project(o[r+1]));n>l&&(n=l)}}),n},geosite.vecmath.closestLocation=function(e,t){if(void 0!=t.toString&&t.toString().startsWith("LatLng"))return t;var a=L.Projection.SphericalMercator,n=void 0,i=void 0;return $.each(t._layers,function(t,o){var r=o._latlngs,l=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(r[l]),a.project(r[l+1])),i=L.LineUtil.closestPointOnSegment(a.project(e),a.project(r[l]),a.project(r[l+1])),l++);l<r.length-1;l++){var s=L.LineUtil.pointToSegmentDistance(a.project(e),a.project(r[l]),a.project(r[l+1]));n>s&&(n=s,i=L.LineUtil.closestPointOnSegment(a.project(e),a.project(r[l]),a.project(r[l+1])))}}),a.unproject(i)},geosite.vecmath.getClosestFeatureAndLocation=function(e,t){var a=void 0,n=0,i=void 0;if(void 0!=e&&e.length>0){a=e[0],n=geosite.vecmath.distance(t,e[0].geometry),i=geosite.vecmath.closestLocation(t,e[0].geometry);for(var o=1;o<e.length;o++){var r=e[o];geosite.vecmath.distance(t,r.geometry)<n&&(a=r,n=geosite.vecmath.distance(t,r.geometry),i=geosite.vecmath.closestLocation(t,r.geometry))}}return{feature:a,location:i}},geosite.init_state=function(e,t){var a=$.extend({},e),n=getHashValueAsFloat(["latitude","lat","y"])||e.lat||0,i=getHashValueAsFloat(["longitude","lon","long","lng","x"])||e.lon||0,o=getHashValueAsInteger(["zoom","z"])||e.z||3,r={lat:n,lon:i,z:o};return a.view=void 0!=a.view?$.extend(a.view,r):r,void 0!=a.filters&&$.each(a.filters,function(e,n){$.each(n,function(n,i){var o=t.filters[e][n].toLowerCase(),r=getHashValue(e+":"+n,o);void 0!=r&&""!=r&&(a.filters[e][n]=r)})}),void 0!=a.styles,a},geosite.ui_init_slider_label=function(e,t,a,n,i){if("ordinal"==a){var o={value:i};t.data("label").html(e(t.data("label-template"))(o))}else if("continuous"==a)if("boolean"==$.type(n)&&n||"true"==n.toLowerCase()){var o={values:[i[0],i[1]]};t.data("label").html(e(t.data("label-template"))(o))}else if("min"==n||"max"==n){var o={value:i};t.data("label").html(e(t.data("label-template"))(o))}},geosite.ui_init_slider_slider=function(e,t,a,n,i,o,r,l,s){"ordinal"==n?a.slider({range:"boolean"==$.type(i)&&i||"true"==i.toLowerCase()?!0:i,value:o,min:0,max:l,step:1,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var o=a.data("output"),r=a.data("options")[i.value],l={};l[o]=r,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:l},t)}}):"continuous"==n&&("boolean"==$.type(i)&&i||"true"==i.toLowerCase()?a.slider({range:!0,values:o,min:r,max:l,step:s,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var o=a.data("output"),r=i.values,l={};l[o]=r,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:l},t)}}):("min"==i||"max"==i)&&a.slider({range:i,value:o,min:r,max:l,step:s,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var o=a.data("output"),r=i.value/100,l={};l[o]=r,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:l},t)}}))},geosite.ui_update_slider_label=function(e,t,a){var n=$(this),i=n.data("type"),o=n.data("range");if("ordinal"==i){var r={value:n.data("options")[a.value]};n.data("label").html(e(n.data("label-template"))(r))}else if("continuous"==i)if("boolean"==$.type(o)&&o||"true"==o.toLowerCase()){var r={values:[a.values[0],a.values[1]]};n.data("label").html(e(n.data("label-template"))(r))}else if("min"==o||"max"==o){var r={value:a.value/100};n.data("label").html(e(n.data("label-template"))(r))}};var getHashValue=function(e,t){var a=void 0;e="string"==typeof e?[e.toLowerCase()]:$.map(e,function(e,t){return e.toLowerCase()});for(var n=location.hash.toLowerCase(),i=0;i<e.length;i++){var o=e[i],r=n.match(new RegExp(o+"=([^&]*)"));if(r&&(a=r[1],void 0!=a&&null!=a&&""!=a))break}if(void 0!=t)if("integer"==t)a=void 0!=a&&null!=a&&""!=a?parseInt(a,10):void 0;else if("stringarray"==t){if(void 0!=a){var l=a.split(",");a=l}}else if("integerarray"==t){if(void 0!=a){for(var s=a.split(","),l=[],i=0;i<s.length;i++){var d=s[i];l.push(void 0!=d&&null!=d&&""!=d?parseInt(d,10):void 0)}a=l}}else if("float"==t)a=void 0!=a&&null!=a&&""!=a?parseFloat(a):void 0;else if("floatarray"==t&&void 0!=a){for(var s=a.split(","),l=[],i=0;i<s.length;i++){var d=s[i];l.push(void 0!=d&&null!=d&&""!=d?parseFloat(d):void 0)}a=l}return a},hasHashValue=function(e){var t=getHashValue(e);return void 0!=t&&null!=t&&""!=t},getHashValueAsStringArray=function(e){return getHashValue(e,"stringarray")},getHashValueAsInteger=function(e){return getHashValue(e,"integer")},getHashValueAsIntegerArray=function(e){return getHashValue(e,"integerarray")},getHashValueAsFloat=function(e){return getHashValue(e,"float")},sortLayers=function(e,t){var a=$.isArray(e)?e:$.map(e,function(e){return e});return a=a.sort(function(e,t){return e.options.renderOrder-t.options.renderOrder}),t===!0&&a.reverse(),a},updateRenderOrder=function(e){for(var t=0;t<e.length;t++)e[t].bringToFront()},layersAsArray=function(e){return $.map(e,function(e,t){return{id:t,layer:e}})},extract=function(e,t){var a=void 0;if(0==e.length)a=t;else if(void 0!=t){var n=e.slice(1),i=Array.isArray(t)?t[e[0]]:t[""+e[0]];a=extract(n,i)}return a};geosite.codec={},geosite.codec.parseFeatures=function(e,t){var a=[];return $(e).find("gml\\:featuremember").each(function(){var e=$(this).children(),n=e.prop("tagName").toLowerCase(),i=geosite.codec.parseAttributes(e,t[n]),o=e.find("geonode\\:shape"),r=void 0;if(o.find("gml\\:point").length>0){var l=o.find("gml\\:point").find("gml\\:coordinates").text().split(",");r=new L.LatLng(parseFloat(l[1]),parseFloat(l[0]))}else if(o.find("gml\\:multilinestring").length>0){var l=o.find("gml\\:multilinestring").find("gml\\:linestringmember").find("gml\\:linestring").find("gml\\:coordinates").text().split(" ");l=$.map(l,function(e,t){var a=e.split(",");return[[parseFloat(a[0]),parseFloat(a[1])]]});var s=[{type:"LineString",coordinates:l}];r=new L.GeoJSON(s,{})}var d={featuretype:n,attributes:i,geometry:r};a.push(d)}),a},geosite.codec.parseAttributes=function(e,t){for(var a={},n=0;n<t.length;n++){var i=t[n],o=i.output||i.attribute;a[o]=void 0;var r=i.attribute||i.input,l=void 0!=r?[r]:i.inputs;if(void 0!=l)for(var s=0;s<l.length;s++){var r=l[s];if(e.find("geonode\\:"+r).length>0){a[o]=e.find("geonode\\:"+r).text();break}}}return a},geosite.popup={},geosite.popup.buildChart=function(e,t,a,n){return'<div id="'+e.id+'" class="geosite-popup-chart"></div>'},geosite.popup.buildField=function(e,t,a,n){var i=e.output||e.attribute,o=void 0,r=!1;if(void 0!=e.when&&"defined"==e.when.toLowerCase()?void 0!=a.attributes[i]&&(r=!0):r=!0,r)if("link"==e.type){var l=void 0!=e.value?e.value:"{{ feature.attributes."+i+" }}";o="<span><b>"+e.label+':</b> <a target="_blank" href="'+e.url+'">',o+=l,o+="</a></span>"}else{var l=void 0;if(void 0!=e.value)l=e.value;else{if("date"==e.type){var s=e.format||"medium";l="feature.attributes."+i+" | date:'"+s+"'"}else l="feature.attributes."+i;e.fallback&&(l="("+l+") || '"+e.fallback+"'"),l="{{ "+l+" }}"}o="<span><b>"+e.label+":</b> "+l+"</span>"}return o},geosite.popup.buildPopupTemplate=function(e,t,a,n){var i=e.panes,o="";angular.isDefined(e.title)&&(o+='<h5 style="word-wrap:break-word;text-align:center;">'+e.title+"</h5>");for(var r=[],l=0;l<i.length;l++){var s=i[l],d=[],c=[];if("fields"in s)for(var p=0;p<s.fields.length;p++){var u=geosite.popup.buildField(s.fields[p],t,a,n);void 0!=u&&d.push(u)}if("charts"in s)for(var p=0;p<s.charts.length;p++){var g=geosite.popup.buildChart(s.charts[p],t,a,n);void 0!=g&&c.push(g)}var f=d.join("<br>");c.length>0&&(f+="<hr>"+c.join("<br>")),r.push(f)}if(i.length>1){var m=[],s=i[0];m.push('<li class="active"><a data-toggle="tab" href="#'+s.id+'">'+s.tab.label+"</a></li>");for(var l=1;l<i.length;l++)s=i[l],m.push('<li><a data-toggle="tab" href="#'+s.id+'">'+s.tab.label+"</a></li>");var v='<ul class="nav nav-tabs nav-justified">'+m.join("")+"</ul>",y=[];y.push('<div id="'+i[0].id+'" class="tab-pane fade in active">'+r[0]+"</div>");for(var l=1;l<i.length;l++)y.push('<div id="'+i[l].id+'" class="tab-pane fade">'+r[l]+"</div>");var h='<div class="tab-content">'+y.join("")+"</div>";o+=v+h}else o+=r[0];return o},geosite.popup.buildPopupContent=function(e,t,a,n){var i=geosite.popup.buildPopupTemplate(t.popup,t,a,n),o={layer:t,feature:a,state:n};return e(i)(o)},geosite.popup.openPopup=function(e,t,a,n,i,o){var r=geosite.popup.buildPopupContent(e,t,a,o),l=new L.Popup({maxWidth:t.popup.maxWidth||400},void 0);l.setLatLng(new L.LatLng(n.lat,n.lon)),l.setContent(r),i.openPopup(l)},geosite.tilemath={D2R:Math.PI/180,R2D:180/Math.PI},geosite.tilemath.point_to_bbox=function(e,t,a,n){var i=geosite.tilemath.point_to_radius(a),o=e+i;void 0!=n&&n>=0&&(o=o.toFixed(n));var r=e-i;void 0!=n&&n>=0&&(r=r.toFixed(n));var l=t-i;void 0!=n&&n>=0&&(l=l.toFixed(n));var s=t+i;return void 0!=n&&n>=0&&(s=s.toFixed(n)),[r,l,o,s]},geosite.tilemath.point_to_radius=function(e){return(geosite.config.click_radius||4)/e},geosite.tilemath.tms_to_bbox=function(e,t,a){var n=geosite.tilemath.tile_to_lon(e+1,a),i=geosite.tilemath.tile_to_lon(e,a),o=geosite.tilemath.tile_to_lat(t+1,a),r=geosite.tilemath.tile_to_lat(t,a);return[i,o,n,r]},geosite.tilemath.tile_to_lon=function(e,t){return e/Math.pow(2,t)*360-180},geosite.tilemath.tile_to_lat=function(e,t){return n=Math.pi-2*Math.PI*e/Math.pow(2,t),R2D*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))},geosite.http={},geosite.http.build_promises=function(e,t){for(var a=[],n=0;n<t.length;n++){var i=t[n],o={},r=e.get(i,o);a.push(r)}return a},geosite.http.build_features=function(e,t){for(var a=[],n=0;n<e.length;n++){var i=e[n];if(200==i.status){var o=i.data;a=a.concat(geosite.codec.parseFeatures(o,t))}}return a},geosite.layers={},geosite.layers.aggregate_fields=function(e){for(var t=[],a=0;a<e.popup.panes.length;a++)t=t.concat(e.popup.panes[a].fields);return t},geosite.layers.init_baselayers=function(e,t){for(var a={},n=0;n<t.length;n++){var i=t[n];try{a[i.id]=L.tileLayer(i.source.url,{id:i.id,attribution:i.source.attribution})}catch(o){console.log("Could not add baselayer "+n)}}return a},geosite.layers.init_featurelayer_post=function(e,t,a,n,i){void 0!=n?((void 0!=i?i:!0)&&n.addTo(t.map),geosite.api.intend("layerLoaded",{type:"featurelayer",layer:a,visible:i},e)):console.log("Could not add featurelayer "+a+" because it is undefined.")},geosite.layers.init_featurelayer_wms=function(e,t,a,n,i){var o=i.wms,r=L.tileLayer.wms(o.url,{renderOrder:$.inArray(n,a.renderlayers),buffer:o.buffer||0,version:o.version||"1.1.1",layers:o.layers.join(","),styles:o.styles?o.styles.join(","):"",format:o.format,transparent:o.transparent||!1,attribution:i.source.attribution});t.featurelayers[n]=r,geosite.layers.init_featurelayer_post(e,t,n,r,i.visible)},geosite.layers.init_featurelayer_geojson=function(e,t,a,n,i){$.ajax({url:i.source.url,dataType:"json",success:function(a){var o=void 0;if("heatmap"==i.transform){for(var r=[],l=0,s=0;s<a[0].features.length;s++){var d="attribute"in i.heatmap&&""!=i.heatmap.attribute?a[0].features[s].properties[i.heatmap.attribute]:1;r.push([a[0].features[s].geometry.coordinates[1],a[0].features[s].geometry.coordinates[0],d]),d>l&&(l=d)}for(var s=0;s<r.length;s++)r[s][2]=r[s][2]/l;var c=L.heatCanvas();o=L.heatLayer(r,{renderer:c,attribution:i.source.attribution,radius:i.heatmap.radius||25,blur:i.heatmap.blur||15,max:i.heatmap.max||1,minOpacity:i.heatmap.minOpacity||.5})}else o=L.geoJson(a,{attribution:i.source.attribution});t.featurelayers[n]=o,geosite.layers.init_featurelayer_post(e,t,n,o,i.visible)}})},geosite.layers.init_featurelayer=function(e,t,a,n,i){(void 0==t.enabled||1==t.enabled)&&("geojson"==t.type.toLowerCase()?geosite.layers.init_featurelayer_geojson(a,n,i,e,t):"wms"==t.type.toLowerCase()&&geosite.layers.init_featurelayer_wms(a,n,i,e,t))},geosite.layers.init_featurelayers=function(e,t,a,n){$.each(e,function(e,i){geosite.layers.init_featurelayer(e,i,t,a,n)})};var sparc={};sparc.welcome=function(e){e=e||{};var t=e.$scope||e.scope||angular.element("#geosite-main").scope(),a={id:"sparc-modal-welcome",modal:{backdrop:"static",keyboard:!1},dynamic:{},"static":{welcome:t.map_config.welcome}};geosite.api.intend("toggleModal",a,t)},sparc.normalize_feature=function(e){var e={attributes:e.attributes||e.properties,geometry:e.geometry};return e},geosite.vam_filter_fcs=function(e,t,a){if(void 0!=t.fcs){var n=100;if(0==t.fcs.length)n=0;else if("poor,borderline,acceptable"!=t.fcs.join(",")){console.log("FCS Filter:",t.fcs);var i=a.attributes.admin1_code,o=$.grep(geosite.initial_data.layers.vam.data.geojson.features,function(e,t){return e.properties.admin1_code==i});if(o.length>0){var r=o[0];void 0!=r.properties.vam.fcs&&(n=0,$.each(r.properties.vam.fcs,function(e,a){-1!=$.inArray(e,t.fcs)&&(n+=a)}))}}e*=n/100}return e},geosite.vam_filter_csi=function(e,t,a){if(void 0!=t.csi){var n=100;if(0==t.csi.length)n=0;else if("no,low,medium,high"!=t.csi.join(",")){var i=a.attributes.admin1_code,o=$.grep(geosite.initial_data.layers.vam.data.geojson.features,function(e,t){return e.properties.admin1_code==i});if(o.length>0){var r=o[0];void 0!=r.properties.vam.csi&&(n=0,$.each(r.properties.vam.csi,function(e,a){-1!=$.inArray(e,t.csi)&&(n+=a)}))}}e*=n/100}return e},sparc.calculate_population_at_risk=function(e,t,a,n){var i=0,o=months_short_3[a.month-1];if("cyclone"==e)for(var r=a.filters.popatrisk.prob_class_max,l=a.filters.popatrisk.category,s=0;s<t.attributes.addinfo.length;s++){var d=t.attributes.addinfo[s];d.category==l&&0!=d.prob_class_max&&d.prob_class_max<=r&&(console.log("matched prob_class",r),i+=d[o])}else if("drought"==e)for(var r=a.filters.popatrisk.prob_class_max,s=0;s<t.attributes.addinfo.length;s++){var d=t.attributes.addinfo[s];d.month==o&&0!=d.prob&&d.prob<r&&(i+=d.popatrisk)}else if("flood"==e){var c=a.filters.popatrisk.rp;i=t.attributes["RP"+c.toString(10)][o]}return void 0!=n&&$.each(n,function(e,n){i=geosite[n](i,a.filters.popatrisk,t)}),i};var buildGroupsAndColumnsForCountry=function(e,t){var a=[[]],n=[],i=void 0;if("cyclone"==e.hazard)$.each(t.data.summary.prob_class,function(e,t){var i=t.by_month;n.push([e].concat(i)),a[0].push(e)}),a[0].sort(function(e,t){return parseFloat(t.split("-")[0])-parseFloat(e.split("-")[0])}),n.sort(function(e,t){return parseFloat(e[0].split("-")[0])-parseFloat(t[0].split("-")[0])}),i=function(e,t){return parseFloat(t.id.split("-")[0])-parseFloat(e.id.split("-")[0])};else if("drought"==e.hazard){for(var o=0;o<e.groups.length;o++){var r=e.group_prefix,l=e.group_key,s=e.group_modifier,d=e.groups[o],c=t.data.summary[l][""+d*s].by_month;n.push([r+d].concat(c)),a[0].push(r+d)}n.reverse()}else if("flood"==e.hazard){for(var o=0;o<e.groups.length;o++){var r=e.group_prefix,l=e.group_key,d=e.groups[o],s=e.group_modifier,c=t.data.summary[l][""+d*s].by_month;n.push([r+d].concat(c)),a[0].push(r+d)}n.reverse()}return{groups:a,columns:n,order:i}},buildGroupsAndColumnsForAdmin2=function(e,t,a){var n=[[]],i=[],o=void 0;if("flood"==e.hazard){for(var r=0;r<e.returnPeriods.length;r++){var l=e.returnPeriods[r],s=t.data.summary.admin2[a].rp[""+l].by_month;i.push(["rp"+l].concat(s)),n[0].push("rp"+l)}i.reverse()}else"cyclone"==e.hazard&&($.each(t.data.summary.admin2[a].prob_class,function(e,t){var a=t.by_month;i.push([e].concat(a)),n[0].push(e)}),n[0].sort(function(e,t){return parseFloat(t.split("-")[0])-parseFloat(e.split("-")[0])}),i.sort(function(e,t){return parseFloat(e[0].split("-")[0])-parseFloat(t[0].split("-")[0])}),o=function(e,t){return parseFloat(t.id.split("-")[0])-parseFloat(e.id.split("-")[0])});return{groups:n,columns:i,order:o}},buildHazardChart=function(e,t,a){var n=void 0;if("bar"==e.type){n=void 0!=a&&void 0!=a.groups&&void 0!=a.columns?{groups:a.groups,columns:a.columns,order:void 0}:buildGroupsAndColumnsForCountry(e,t);var i=void 0;"bullet"==e.subtype?(i={bullet:!0,width:function(e,t){return"rp25"==e.id?8:16},offset:function(e,t){return 0}},void 0!=a&&void 0!=a.bullet_width&&(i.width=a.bullet_width)):i={width:{ratio:.6}};var o={x:{},y:{}};void 0!=e.axis&&void 0!=e.axis.x&&"months"==e.axis.x.type&&(o.x.tick={format:function(e){return months_short_3[e].toTitleCase()}}),o.y.label=e.axis.y.label,o.y.tick={format:d3.format("s,")};c3.generate({bindto:"#"+(e.element||e.id),data:{columns:n.columns,groups:n.groups,type:"bar",colors:e.colors,order:n.order||"desc"},axis:o,bar:i})}};geosite.config={click_radius:2},geosite.init_country=function(e){var t=geosite.map_config.featurelayers.context.urls.summary.replace("{iso3}",geosite.initial_state.iso3),a=geosite.map_config.featurelayers.context.urls.geojson.replace("{iso3}",geosite.initial_state.iso3),n=geosite.map_config.featurelayers.vam.urls.geojson.replace("{iso3}",geosite.initial_state.iso3);$.when($.ajax({dataType:"json",url:t}),$.ajax({dataType:"json",url:a}),$.ajax({dataType:"json",url:n})).done(function(t,a,n){geosite.initial_data.layers.context.data.summary=t[0],geosite.initial_data.layers.context.data.geojson=a[0],geosite.initial_data.layers.vam.data.geojson=n[0],geosite.breakpoints={},$.each(geosite.initial_data.layers.context.data.summary.all.breakpoints,function(e,t){geosite.breakpoints["context_"+e]=t}),geosite.init_country_main_app(e)})},geosite.init_country_main_app=function(e){geosite.app=app=angular.module(e,["ngRoute","ngSanitize"]),void 0!=geosite.templates&&$.each(geosite.templates,function(e,t){app.run(function(a){a.put(e,t)})}),void 0!=geosite.filters&&$.each(geosite.filters,function(e,t){app.filter(e,t)}),void 0!=geosite.directives&&$.each(geosite.directives,function(e,t){app.directive(e,t)}),app.factory("state",function(){return $.extend({},geosite.initial_state)}),app.factory("stateschema",function(){return $.extend({},geosite.state_schema)}),app.factory("map_config",function(){return $.extend({},geosite.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{popatrisk:void 0}}}),geosite.init.intents(),geosite.init_controller_base(app),init_sparc_controller_main($(".geosite-controller.geosite-main"),app),angular.bootstrap(document,[e])},geosite.init_countryhazardmonth=function(e){var t=geosite.map_config.featurelayers.popatrisk.urls.summary.replace("{iso3}",geosite.initial_state.iso3).replace("{hazard}",geosite.initial_state.hazard),a=geosite.map_config.featurelayers.popatrisk.urls.geojson.replace("{iso3}",geosite.initial_state.iso3).replace("{hazard}",geosite.initial_state.hazard),n=geosite.map_config.featurelayers.context.urls.summary.replace("{iso3}",geosite.initial_state.iso3),i=geosite.map_config.featurelayers.context.urls.geojson.replace("{iso3}",geosite.initial_state.iso3),o=geosite.map_config.featurelayers.vam.urls.geojson.replace("{iso3}",geosite.initial_state.iso3);$.when($.ajax({dataType:"json",url:t}),$.ajax({dataType:"json",url:a}),$.ajax({dataType:"json",url:n}),$.ajax({dataType:"json",url:i}),$.ajax({dataType:"json",url:o})).done(function(t,a,n,i,o){geosite.initial_data.layers.popatrisk.data.summary=t[0],geosite.initial_data.layers.popatrisk.data.geojson=a[0],geosite.initial_data.layers.context.data.summary=n[0],geosite.initial_data.layers.context.data.geojson=i[0],geosite.initial_data.layers.vam.data.geojson=o[0],geosite.breakpoints={},$.each(geosite.initial_data.layers.popatrisk.data.summary.all.breakpoints,function(e,t){geosite.breakpoints["popatrisk_"+e]=t}),$.each(geosite.initial_data.layers.context.data.summary.all.breakpoints,function(e,t){geosite.breakpoints["context_"+e]=t}),geosite.init_countryhazardmonth_main_app(e)})},geosite.init_countryhazardmonth_main_app=function(e){geosite.app=app=angular.module(e,["ngRoute","ngSanitize"]),void 0!=geosite.templates&&$.each(geosite.templates,function(e,t){app.run(function(a){a.put(e,t)})}),void 0!=geosite.filters&&$.each(geosite.filters,function(e,t){app.filter(e,t)}),void 0!=geosite.directives&&$.each(geosite.directives,function(e,t){app.directive(e,t)}),app.factory("state",function(){return $.extend({},geosite.initial_state)}),app.factory("stateschema",function(){return $.extend({},geosite.state_schema)}),app.factory("map_config",function(){return $.extend({},geosite.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{popatrisk:void 0}}}),geosite.init.intents(),geosite.init_controller_base(app),init_sparc_controller_main($(".geosite-controller.geosite-main"),app),angular.bootstrap(document,[e])},geosite.init_explore=function(e){geosite.app=app=angular.module(e,["ngRoute","ngSanitize"]),void 0!=geosite.templates&&$.each(geosite.templates,function(e,t){app.run(function(a){a.put(e,t)})}),void 0!=geosite.filters&&$.each(geosite.filters,function(e,t){app.filter(e,t)}),void 0!=geosite.directives&&$.each(geosite.directives,function(e,t){app.directive(e,t)}),app.factory("state",function(){return $.extend({},geosite.initial_state)}),app.factory("stateschema",function(){return $.extend({},geosite.state_schema)}),app.factory("map_config",function(){return $.extend({},geosite.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{}}}),geosite.init.intents(),geosite.init_controller_base(app),init_sparc_controller_main($(".geosite-controller.geosite-main"),app),angular.bootstrap(document,[e])};var init_sparc_controller=function(e,t){var a=e.data("controllerName");e.data("controllerType");t.controller(a,function(e,t){init_intents($(t),e)})};geosite.style_cyclone=function(e,t,a,n){var i={},o=t.filters.popatrisk,r=o.popatrisk_range,l=o.ldi_range,s=e.properties.ldi,d=o.erosion_propensity_range,c=e.properties.erosion_propensity,p=o.landcover_delta_negative_range,u=e.properties.delta_negative,g=sparc.calculate_population_at_risk("cyclone",sparc.normalize_feature(e),t,n.filters);if(g>=r[0]&&g<=r[1]&&(void 0==s||s>=l[0]&&s<=l[1])&&(void 0==c||c>=d[0]&&c<=d[1])&&(void 0==u||u>=p[0]&&u<=p[1])){for(var f=a.featurelayers.popatrisk.cartography[0].colors.ramp,m=geosite.breakpoints[n.breakpoints],v=void 0,y=0;y<m.length-1;y++)if(g==m[y]&&g==m[y+1]||g>=m[y]&&g<m[y+1]){v=f[y];break}i.fillColor=void 0==v?f[f.length-1]:v}else i.opacity=0,i.fillOpacity=0;return i},geosite.style_drought=function(e,t,a,n){var i={},o=t.filters.popatrisk,r=o.popatrisk_range,l=o.ldi_range,s=e.properties.ldi,d=o.erosion_propensity_range,c=e.properties.erosion_propensity,p=o.landcover_delta_negative_range,u=e.properties.delta_negative,g=sparc.calculate_population_at_risk("drought",sparc.normalize_feature(e),t,n.filters);if(g>=r[0]&&g<=r[1]&&(void 0==s||s>=l[0]&&s<=l[1])&&(void 0==c||c>=d[0]&&c<=d[1])&&(void 0==u||u>=p[0]&&u<=p[1])){for(var f=a.featurelayers.popatrisk.cartography[0].colors.ramp,m=geosite.breakpoints[n.breakpoints],v=void 0,y=0;y<m.length-1;y++)if(g==m[y]&&g==m[y+1]||g>=m[y]&&g<m[y+1]){v=f[y];break}i.fillColor=void 0==v?f[f.length-1]:v}else i.opacity=0,i.fillOpacity=0;return i},geosite.style_flood=function(e,t,a,n){var i={},o=t.filters.popatrisk,r=o.popatrisk_range,l=o.ldi_range,s=e.properties.ldi,d=o.erosion_propensity_range,c=e.properties.erosion_propensity,p=o.landcover_delta_negative_range,u=e.properties.delta_negative,g=sparc.calculate_population_at_risk("flood",sparc.normalize_feature(e),t,n.filters);if(g>=r[0]&&g<=r[1]&&(void 0==s||s>=l[0]&&s<=l[1])&&(void 0==c||c>=d[0]&&c<=d[1])&&(void 0==u||u>=p[0]&&u<=p[1])){for(var f=a.featurelayers.popatrisk.cartography[0].colors.ramp,m=geosite.breakpoints[n.breakpoints],v=void 0,y=0;y<m.length-1;y++)if(g==m[y]&&g==m[y+1]||g>=m[y]&&g<m[y+1]){v=f[y];break}i.fillColor=void 0==v?f[f.length-1]:v}else i.opacity=0,i.fillOpacity=0;return i},geosite.style_context=function(e,t,a,n){var i={},o=a.featurelayers.context,r=(t.filters.context,t.styles.context),l=$.grep(o.cartography,function(e,t){return e.id==r}),s=1==l.length?l[0]:o.cartography[0],d=!0;if("mask"in s&&(1==e.properties[s.mask]?d=!0:(i.fillColor=s.colors.outside,d=!1)),d){for(var c=e.properties[s.attribute],p=s.colors.ramp,u=s.breakpoints||"natural_adjusted",g=geosite.initial_data.layers.context.data.summary.all.breakpoints[u],f=void 0,m=0;m<g.length-1;m++)if(c==g[m]&&c==g[m+1]||c>=g[m]&&c<g[m+1]){f=p[m];break}i.fillColor=void 0==f?p[p.length-1]:f}return i},geosite.utility={},geosite.utility.getClosestFeature=function(e,t){var a=void 0,n=0;if(void 0!=e&&e.length>0){a=e[0],n=t.distanceTo(e[0].geometry);for(var i=0;i<e.length;i++){var o=e[i];t.distanceTo(o.geometry)<n&&(a=o,n=t.distanceTo(o.geometry))}}return a},geosite.templates={},geosite.templates["modal_layer_carto.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }} / Cartography</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Style:</b></p>\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="style in layer.cartography track by $index">\n            <a\n              class="geosite-intent"\n              href="#modal-layer-carto-style-{{ style.id }}"\n              aria-controls="modal-layer-carto-style-{{ style.id }}"\n              data-intent-name="selectStyle"\n              data-intent-data="{&quot;layer&quot;:&quot;{{ layerID }}&quot;,&quot;style&quot;:&quot;{{ style.id }}&quot;}"\n              data-intent-ctrl="geosite-map-legend"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="style.title | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="style in layer.cartography track by $index"\n            id="modal-layer-carto-style-{{ style.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Attribute: </b><span>{{ style.attribute | default:"Not styled by attribute" }}</span></span><br>\n            <span><b>Mask: </b><span ng-bind-html="style.mask | md2html | default:\'No Mask\'"></span></span><br>\n            <span><b>Description: </b><span ng-bind-html="style.description | md2html | default:\'Not specified\'"></span></span>\n            <br>\n            <br>\n            <div\n              ng-if="style.type == \'graduated\'"\n              geosite-symbol-graduated\n              style="style"\n              container-width="{{ \'392px\' }}">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'circle\'"\n              geosite-symbol-circle\n              style="style">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'graphic\'"\n              geosite-symbol-graphic\n              style="style">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_layer_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-layer-more-general"\n              aria-controls="modal-layer-more-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-source"\n              aria-controls="modal-layer-more-source"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Source</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wms"\n              aria-controls="modal-layer-more-wms"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WMS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wfs"\n              aria-controls="modal-layer-more-wfs"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WFS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-download"\n              aria-controls="modal-layer-more-download"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Download</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-layer-more-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="layer.description | md2html | default:\'No description given.\'"></span>\n            <br><br><b>Type:</b> {{ layer.type }}\n            <br><br><b>Source:</b> {{ layer.source.name | default:"Not specified" }}\n          </div>\n          <div\n            ng-if="layer.source"\n            id="modal-layer-more-source"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Name:</b> {{ layer.source.name | default:"Not specified" }}</span><br>\n            <span><b>Attribution:</b> {{ layer.source.attribution | default:"Not specified" }}</span><br>\n            <span><b>URL:</b> {{ layer.source.url | default:"Not specified" }}</span><br>\n          </div>\n          <div\n            ng-if="layer.wms"\n            id="modal-layer-more-wms"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wms.url | default:"Not specified" }}</span><br>\n            <span><b>Layers:</b> {{ layer.wms.layers|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Styles:</b> {{ layer.wms.styles|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Format:</b> {{ layer.wms.format | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wms.version | default:"Not specified" }}</span><br>\n            <span><b>Transparent:</b> {{ layer.wms.transparent | default:"No" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetCapabilities">Capabilities</a><br>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetLegendGraphic&format=image/png&layer={{ layer.wms.layers|first }}">Legend Graphic</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-wfs"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wfs.url | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wfs.version | default:"Not specified" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer.wfs.url }}?service=wfs&request=DescribeFeatureType&version={{ layer.wfs.version }}">Describe Feature Type</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-download"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Download Shapefile</b>: <a target="_blank" href="{{ layer | url_shapefile }}">All</a>, <a target="_blank" href="{{ layer | url_shapefile:state }}">Current Extent</a><br>\n            <span><b>Download GeoJSON</b>: <a target="_blank" href="{{ layer | url_geojson }}">All</a>, <a target="_blank" href="{{ layer | url_geojson:state }}">Current Extent</a><br>\n            <span><b>Download Google Earth KML</b>: <a target="_blank" href="{{ layer | url_kml }}">All</a>, <a target="_blank" href="{{ layer | url_kml:state }}">Current Extent</a><br>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',
geosite.templates["modal_layer_config.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li class="active" role="presentation">\n            <a href="#modal-layer-config-input"\n              aria-controls="modal-layer-config-input"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Configure</a>\n          </li>\n          <li class="" role="presentation">\n            <a href="#modal-layer-config-output"\n              aria-controls="modal-layer-config-output"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Output</a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            id="modal-layer-config-input"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Title</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Title</label>\n                <input\n                  id="layer-config-title"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geosite-field-type="text"\n                  ng-model="layer.title"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.title }}">\n              </div>\n            </div>\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Description</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Description</label>\n                <input\n                  id="layer-config-description"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geosite-field-type="text"\n                  ng-model="layer.description"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.Description }}">\n              </div>\n            </div>\n          </div>\n          <div\n            id="modal-layer-config-output"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            {{ layer | json }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["symbol_circle.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <circle\n      cx="50%"\n      cy="50%"\n      ng-r="{{ style.legend.symbol.radius }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geosite.templates["symbol_ellipse.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <ellipse\n      cx="50%"\n      cy="50%"\n      ng-rx="{{ style.legend.symbol.width }}"\n      ng-ry="{{ style.legend.symbol.height }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geosite.templates["symbol_graduated.tpl.html"]='<div>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.label_left | md2html"></div>\n  <svg\n    ng-attr-width="{{ containerWidth }}"\n    height="90px"\n    version="1.0"\n    xmlns="http://www.w3.org/2000/svg">\n    <g>\n      <rect\n        ng-repeat="color in style.colors.ramp track by $index"\n        ng-attr-x="{{ style.colors.ramp | length | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ \'0\' }}"\n        ng-attr-width="{{ style.colors.ramp | length | width_x : containerWidth : 26 }}px"\n        height="50px"\n        ng-attr-fill="{{ color }}"\n        stroke-width="1"\n        stroke="#000000"/>\n    </g>\n    <g>\n      <text\n        ng-repeat="breakpoint in style | breakpoints track by $index"\n        ng-attr-x="{{ style | breakpoints | length | add: -1 | position_x : $index : containerWidth : 26 }}px"\n        ng-attr-y="{{ $index | choose : 68 : 82 }}px"\n        text-anchor="middle"\n        ng-attr-fill="{{ \'black\' }}"\n        font-size="14px"\n        text-decoration="underline"\n        font-family="\'Open Sans\', sans-serif">{{ style | breakpoint: $index | formatBreakpoint }}</text>\n    </g>\n  </svg>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.label_right | md2html"></div>\n</div>\n',geosite.templates["symbol_graphic.tpl.html"]='<i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n',geosite.templates["legend_baselayers.tpl.html"]='<div class="geosite-map-legend-baselayers geosite-radio-group">\n  <div\n    ng-repeat="layer in map_config.baselayers track by $index"\n    ng-if="layer.legend!==undefined"\n    class="geosite-map-legend-item noselect"\n    data-layer="{{ layer.id }}">\n    <div class="geosite-map-legend-item-left">\n      <div class="geosite-map-legend-item-icon geosite-map-legend-item-more">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-more&quot;,&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;baselayers&quot;,&quot;{{ $index }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-visibility">\n           <a\n             ng-class=" $first ? \'geosite-map-legend-item-visibility-button geosite-intent geosite-radio geosite-on\' : \'geosite-map-legend-item-visibility-button geosite-intent geosite-radio\'"\n             data-intent-name="switchBaseLayer"\n             data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n             data-intent-class-on="geosite-on"\n             data-intent-class-off=""\n             data-intent-ctrl="geosite-map-legend">\n             <i class="fa fa-eye geosite-on"></i><i class="fa fa-eye-slash geosite-off"></i>\n           </a>\n         </div><!--\n      --><div class="geosite-map-legend-item-symbol" style="width: 10px;"></div>\n    </div><!--\n    --><div class="geosite-map-legend-item-right">\n      <div class="geosite-map-legend-item-label" style="width: 100%;">\n        <span ng-bind-html="layer.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geosite.templates["legend_featurelayers.tpl.html"]='<div class="geosite-map-legend-featurelayers">\n  <div\n    ng-repeat="layer in featurelayers track by $index"\n    ng-init="layerIndex = $index"\n    ng-if="layer.item.legend!==undefined"\n    class="geosite-map-legend-item noselect"\n    data-layer="{{ layer.key }}">\n    <div class="geosite-map-legend-item-left">\n      <div class="geosite-map-legend-item-icon geosite-map-legend-item-config" style="display:none;">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-config&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-cog"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-more">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-more&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-visibility">\n         <a\n           ng-class="(layer.item.visible != undefined ? layer.item.visible : true ) ? \'geosite-map-legend-item-visibility-button geosite-intent geosite-toggle\' : \'geosite-map-legend-item-visibility-button geosite-intent geosite-toggle geosite-off\'"\n           data-intent-names="[&quot;showLayer&quot;,&quot;hideLayer&quot;]"\n           data-intent-data="{&quot;layer&quot;:&quot;{{ layer.key }}&quot;}"\n           data-intent-ctrl="geosite-map-legend">\n           <i class="fa fa-eye geosite-on"></i><i class="fa fa-eye-slash geosite-off"></i>\n         </a>\n     </div><!--\n     --><div\n          ng-class="layer.item.type == \'geojson\' ? \'geosite-map-legend-item-icon geosite-map-legend-item-zoomto\': \'geosite-map-legend-item-icon geosite-map-legend-item-zoomto fade disabled\'">\n        <a\n          class="geosite-map-legend-item-zoomto-button geosite-intent"\n          data-intent-name="zoomToLayer"\n          data-intent-data="{&quot;layer&quot;:&quot;{{ layer.key }}&quot;}"\n          data-intent-ctrl="geosite-map-legend">\n          <i class="fa fa-compress"></i>\n        </a>\n      </div>\n    </div><!--\n    --><div class="geosite-map-legend-item-right">\n      <div\n        ng-if="layer.item.cartography[0].legend.symbol"\n        class="geosite-map-legend-item-symbol">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-carto&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}"\n          data-intent-ctrl="geosite-map-legend">\n          <div ng-if="layer.item.cartography[0].legend.symbol.type == \'circle\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <circle\n                cx="50%"\n                cy="50%"\n                ng-r="{{ layer.item.cartography[0].legend.symbol.radius }}"\n                ng-fill="{{ layer.item.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div ng-if="layer.item.cartography[0].legend.symbol.type == \'ellipse\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <ellipse\n                cx="50%"\n                cy="50%"\n                ng-rx="{{ layer.item.cartography[0].legend.symbol.width }}"\n                ng-ry="{{ layer.item.cartography[0].legend.symbol.height }}"\n                ng-fill="{{ layer.item.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.item.cartography[0].legend.symbol.type == \'graduated\'">\n            <svg\n              ng-attr-width="{{ layer.item.cartography[0].legend.symbol.width }}"\n              height="100%"\n              version="1.0"\n              xmlns="http://www.w3.org/2000/svg">\n              <rect\n                ng-repeat="color in layer.item.cartography[0].colors.ramp track by $index"\n                ng-attr-x="{{ $index|percent:layer.item.cartography[0].colors.ramp.length }}%"\n                y="0"\n                ng-attr-width="{{ 1|percent:layer.item.cartography[0].colors.ramp.length }}%"\n                ng-attr-height="{{ layer.item.cartography[0].legend.symbol.height }}"\n                ng-attr-fill="{{ color }}"\n                stroke-width="1"\n                stroke="#000000"/>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.item.cartography[0].legend.symbol.type == \'graphic\'">\n            <i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n          </div>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-label">\n        <span ng-bind-html="layer.item.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_welcome.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-general"\n              aria-controls="modal-welcome-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.general | md2html | default:\'No body given.\'"></span>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_about.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n      <h4 class="modal-title" id="myModalLabel">{{ about.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in about.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in about.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_download.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n      <h4 class="modal-title" id="myModalLabel">{{ download.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="pane in download.panes track by $index">\n            <a\n              href="#{{ pane.id }}"\n              aria-controls="{{ pane.id }}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="pane.tab.label | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="pane in download.panes track by $index"\n            id="{{ pane.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="pane.content | md2html | default:\'No content given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["breadcrumbs.tpl.html"]='<div>\n  <div>\n    <a class="btn btn-primary btn-large" title="Explore" href="/explore">Explore &gt;&gt;</a>\n  </div>\n  <div\n    ng-repeat="bc in breadcrumbs track by $index">\n    <select\n      id="{{ bc.id }}"\n      data-output="{{ bc.output }}"\n      data-width="{{ bc.width }}"\n      data-height="{{ bc.height }}"\n      data-initial-data="{{ bc.data }}"\n      data-breadcrumbs="{{ bc.breadcrumbs }}">\n      <option\n        ng-if="bc.type == \'country\'"\n        value="{{ state.iso3 }}"\n        selected="selected">{{ state.country_title }}</option>\n      <option\n        ng-if="bc.type == \'hazard\'"\n        value="{{ state.hazard }}"\n        selected="selected">{{ state.hazard_title }}</option>\n      <option\n        ng-if="bc.type != \'country\' && bc.type != \'hazard\'"\n        value="placeholder"\n        selected="selected">{{ bc.placeholder }}</option>\n    </select>\n  </div>\n</div>\n',geosite.templates["calendar.tpl.html"]='<ul class="nav nav-justified geosite-radio-group">\n  <li\n    ng-repeat="month in months track by $index">\n    <a\n      ng-class="state.month == month.num ? \'btn btn-primary selected geosite-intent geosite-radio geosite-on\' : \'btn btn-default geosite-intent geosite-radio\'"\n      title="{{ month.long }}"\n      href="/country/{{ state.iso3 }}/hazard/{{ state.hazard }}/month/{{ month.num }}"\n      data-intent-name="stateChanged"\n      data-intent-data="{&quot;month&quot;: {{ month.num }} }"\n      data-intent-ctrl="sparc-map-calendar"\n      data-intent-class-on="btn-primary selected"\n      data-intent-class-off="btn-default" ng-bind-html="month.short3 | title"></a>\n  </li>\n</ul>\n',geosite.templates["modal_filter_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n      <h4 class="modal-title" id="myModalLabel">Filter / {{ filter.label }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li\n            role="presentation"\n            class="active">\n            <a\n              href="#modal-filter-more-general"\n              aria-controls="modal-filter-more-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li\n            ng-if="filter.type == \'checkbox\' && filter.checkbox.options"\n            role="presentation"\n            class="">\n            <a\n              href="#modal-filter-more-options"\n              aria-controls="modal-filter-more-options"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Options</a>\n          </li>\n          <li\n            ng-if="filter.type == \'slider\' && filter.slider.options"\n            role="presentation"\n            class="">\n            <a\n              href="#modal-filter-more-options"\n              aria-controls="modal-filter-more-options"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Options</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-filter-more-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="filter.description | md2html | default:\'No description given.\'"></span>\n            <br><br><b>Type:</b> {{ filter.type }}\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'continuous\'">\n              <b>Minimum Value:</b> <span ng-bind-html="filter.slider.min | formatInteger:\'delimited\':\' \'"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'continuous\'">\n              <b>Maximum Value:</b> <span ng-bind-html="filter.slider.max | formatInteger:\'delimited\':\' \'"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'ordinal\'">\n              <b>Minimum Value:</b> <span ng-bind-html="filter.slider.options | first"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'ordinal\'">\n              <b>Maximum Value:</b> <span ng-bind-html="filter.slider.options | last"></span>\n            </div>\n            <hr>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'ordinal\'">\n              <b>Current Value:</b> <span ng-bind-html="value"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'slider\' && filter.slider.type == \'continuous\'">\n              <b>Current Value:</b> <span ng-bind-html="value | join:\' - \'"></span>\n            </div>\n            <div\n              ng-if="filter.type ==\'checkbox\'">\n              <b>Current Value:</b> <span ng-bind-html="value | formatArray"></span>\n            </div>\n          </div>\n          <div\n            ng-if="filter.type == \'checkbox\' && filter.checkbox.options"\n            id="modal-filter-more-options"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              ng-repeat-start="option in filter.checkbox.options track by $index">\n              <i ng-class="option.checked ? \'fa fa-check-square-o\' : \'fa fa-square-o\'"></i>\n              <b ng-bind-html="option.label"></b>:\n              <span ng-bind-html="option.description | default_if_undefined:\'No description given\'"></span>\n            </span>\n            <br>\n            <br ng-repeat-end>\n          </div>\n          <div\n            ng-if="filter.type == \'slider\' && filter.slider.options"\n            id="modal-filter-more-options"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              ng-repeat-start="option in filter.slider.options track by $index">\n              <i ng-class="option.checked ? \'fa fa-check-square-o\' : \'fa fa-square-o\'"></i>\n              <b ng-bind-html="option"></b>\n            </span>\n            <br ng-repeat-end>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["filter_checkbox.tpl.html"]='<div class="geosite-filter geosite-filter-checkbox" style="height: {{ filter.height }};">\n  <div class="geosite-filter-label">\n    <a\n      class="geosite-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geosite-modal-filter-more&quot;,&quot;static&quot;:{&quot;tab&quot;:&quot;modal-filter-more-general&quot;},&quot;dynamic&quot;:{&quot;value&quot;:[&quot;state&quot;,&quot;filters&quot;,&quot;popatrisk&quot;,&quot;{{ filter.checkbox.output }}&quot;],&quot;filter&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}"\n      data-intent-ctrl="geosite-map-filter">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div\n    class="btn-group"\n    style="float:left;"\n    data-toggle="buttons"\n    data-output="{{ filter.checkbox.output }}">\n    <label\n      ng-repeat="opt in filter.checkbox.options track by $index"\n      ng-class="opt.checked ? \'btn btn-sm btn-default active\' : \'btn btn-sm btn-default\'">\n      <input\n        type="checkbox"\n        id="{{ opt.id }}"\n        data-value="{{ opt.value }}"\n        autocomplete="off"\n        ng-checked="opt.checked || opt.selected"/>\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n',geosite.templates["filter_radio.tpl.html"]='<div class="geosite-filter geosite-filter-radio" style="height: {{ filter.height }};">\n  <div class="geosite-filter-label">\n    <a\n      class="geosite-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geosite-modal-filter-more&quot;,&quot;static&quot;:{&quot;tab&quot;:&quot;modal-filter-more-general&quot;},&quot;dynamic&quot;:{&quot;value&quot;:[&quot;state&quot;,&quot;filters&quot;,&quot;popatrisk&quot;,&quot;{{ filter.radio.output }}&quot;],&quot;filter&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}"\n      data-intent-ctrl="geosite-map-filter">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div\n    class="btn-group"\n    style="float:left;"\n    data-toggle="buttons"\n    data-output="{{ filter.radio.output }}">\n    <label\n      ng-repeat="opt in filter.radio.options track by $index"\n      ng-class="opt.checked ? \'btn btn-default active\' : \'btn btn-default\'">\n      <input\n        type="radio"\n        id="{{ opt.id }}"\n        name="{{ opt.name }}"\n        value="{{ opt.value }}"\n        data-output="{{ filter.radio.output }}"\n        ng-checked="opt.checked || opt.selected"/>\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n',geosite.templates["filter_slider.tpl.html"]='<div class="geosite-filter geosite-filter-slider" style="height: {{ filter.height }};">\n  <div class="geosite-filter-label">\n    <a\n      class="geosite-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geosite-modal-filter-more&quot;,&quot;static&quot;:{&quot;tab&quot;:&quot;modal-filter-more-general&quot;},&quot;dynamic&quot;:{&quot;value&quot;:[&quot;state&quot;,&quot;filters&quot;,&quot;popatrisk&quot;,&quot;{{ filter.slider.output }}&quot;],&quot;filter&quot;:[&quot;map_config&quot;,&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}"\n      data-intent-ctrl="geosite-map-filter">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div style="display:table; height:{{ filter.height }};padding-left:10px;padding-right:10px;">\n    <div style="display:table-cell;vertical-align:middle;">\n      <div class="geosite-filter-slider-label">Placeholder</div>\n      <div\n        class="geosite-filter-slider-slider"\n        style="width:{{ filter.slider.width }};"\n        data-type="{{ filter.slider.type }}"\n        data-value="{{ filter.slider.value ? filter.slider.value : \'\' }}"\n        data-values="{{ filter.slider.values ? filter.slider.values : \'\' }}"\n        data-range="{{ filter.slider.range == \'true\' ? \'true\': filter.slider.range }}"\n        data-output="{{ filter.slider.output }}"\n        data-min-value="{{ filter.slider.min|default_if_undefined:\'\' }}"\n        data-max-value="{{ filter.slider.max|default_if_undefined:\'\' }}"\n        data-step="{{ filter.slider.step ? filter.slider.step : \'\' }}"\n        data-options="{{ filter.slider.options ? filter.slider.options : \'\' }}"\n        data-label-template="{{ filter.slider.label }}"\n        ></div>\n    </div>\n  </div>\n</div>\n',geosite.templates["filter_container.tpl.html"]='<div id="geosite-map-filter-container" class="collapse" style="">\n  <div\n    ng-repeat="filter in filters track by $index">\n    <div geosite-filter-radio ng-if="filter.type == \'radio\'"></div>\n    <div geosite-filter-checkbox ng-if="filter.type == \'checkbox\'"></div>\n    <div geosite-filter-slider ng-if="filter.type == \'slider\'"></div>\n  </div>\n</div>\n',geosite.templates["sparc_sidebar_charts.tpl.html"]='<div class="geosite-sidebar-charts" style="width:100%;">\n  <!-- Nav tabs -->\n  <ul class="nav nav-tabs" role="tablist">\n    <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Chart:</b></p>\n    <li\n      role="presentation"\n      ng-class="$first ? \'active\' : \'\'"\n      ng-repeat="chart in charts track by $index">\n      <a\n        class=""\n        href="#sparc-chart-{{ chart.id }}-pane"\n        aria-controls="sparc-chart-{{ chart.id }}-pane"\n        role="tab"\n        data-toggle="tab"\n        style="padding-left:8px; padding-right: 8px;"\n        ng-bind-html="chart.title | default:\'Default\' | tabLabel"></a>\n    </li>\n  </ul>\n  <!-- Tab panes -->\n  <div class="tab-content">\n    <div\n      ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n      ng-repeat="chart in charts track by $index"\n      on-repeat-done="chart_done"\n      data-repeat-index="{{ $index }}"\n      id="sparc-chart-{{ chart.id }}-pane"\n      role="tabpanel"\n      style="padding: 10px;">\n      <div>\n        <h4 style="text-align:center;">{{ chart.title }}</h4>\n      </div>\n      <div\n        id="{{ chart.element }}"\n        class="geosite-sidebar-chart"\n        style="width:360px;margin:0 auto;"\n      ></div>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_welcome_sparc.tpl.html"]='<div class="modal-dialog" data-backdrop="static" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <h4 class="modal-title" id="myModalLabel">{{ welcome.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-welcome-intro"\n              aria-controls="modal-welcome-intro"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Introduction</a>\n          </li>\n          <li role="presentation" class="">\n            <a\n              href="#modal-welcome-about"\n              aria-controls="modal-welcome-about"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">About</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-welcome-intro"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span\n              class="welcome-body"\n              ng-bind-html="welcome.intro | md2html | default:\'No body given.\'"></span>\n            <hr>\n            <h3 class="welcome-body">Get Started: Select a county &amp; hazard!</h3>\n            <div class="input-group select2-bootstrap-prepend select2-bootstrap-append">\n              <input\n                id="country-input-backend"\n                name="country-input-backend"\n                type="text"\n                class="form-control"\n                style="display:none;"\n                ng-model="country">\n              <span class="input-group-addon" id="country-addon">Country</span>\n              <input\n                id="country-input"\n                name="country-input"\n                type="text"\n                class="typeahead form-control"\n                style="width:400px; height: auto;"\n                placeholder="Country (e.g., Haiti or Philippines)"\n                aria-describedby="country-addon"\n                data-placeholder="Country (e.g., Haiti or Philippines)"\n                data-initial-data="countries_select2"\n                data-backend="country-input-backend"\n                data-template-empty="<div class=&quot;alert alert-danger empty-message&quot;>Unable to find country</div>">\n                <div class="input-group-addon btn btn-danger btn-clear" data-clear="country-input">\n                  <i class="fa fa-times"></i>\n                </div>\n            </div>\n            <br>\n            <div class="input-group select2-bootstrap-prepend select2-bootstrap-append">\n              <input\n                id="hazard-input-backend"\n                name="hazard-input-backend"\n                type="text"\n                class="form-control"\n                style="display:none;"\n                ng-model="hazard">\n              <span class="input-group-addon" id="hazard-addon">Hazard</span>\n              <input\n                id="hazard-input"\n                name="hazard-input"\n                type="text"\n                class="typeahead form-control"\n                style="width:400px; height: auto;"\n                placeholder="Hazard (e.g., Flood, Cyclone, Drought, or Landslide)"\n                aria-describedby="hazard-addon"\n                data-placeholder="Hazard (e.g., Flood, Cyclone, Drought, or Landslide)"\n                data-initial-data="hazards_select2"\n                data-backend="hazard-input-backend"\n                data-template-empty="<div class=&quot;empty-message&quot;>Unable to find hazard</div>">\n                <div class="input-group-addon btn btn-danger btn-clear" data-clear="hazard-input">\n                  <i class="fa fa-times"></i>\n                </div>\n            </div>\n            <hr>\n            <ul class="nav nav-justified welcome-go">\n              <li>\n                <a\n                  ng-disabled="country == undefined || hazard == undefined || country == \'\' || hazard == \'\'"\n                  ng-class="country == undefined || hazard == undefined || country == \'\' || hazard == \'\' ? \'btn btn-default\' : \'btn btn-primary\' "\n                  ng-href="{{ country == undefined || hazard == undefined || country == \'\' || hazard == \'\' ? \'#\' : \'/country/\'+country+\'/hazard/\'+hazard +\'/month/1\' }}">Go!</a>\n              </li>\n            </ul>\n          </div>\n          <div\n            id="modal-welcome-about"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="welcome.about | md2html | default:\'No body given.\'"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n';
var MONTHS_NUM=[1,2,3,4,5,6,7,8,9,10,11,12],MONTHS_LONG=["January","February","March","April","May","June","July","August","September","October","November","December"],MONTHS_SHORT3=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],MONTHS_ALL=$.map(MONTHS_NUM,function(e,t){return{num:e,short3:MONTHS_SHORT3[t],"long":MONTHS_LONG[t]}}),DAYSOFTHEWEEK=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];SPARC_BREADCRUMBS=[{id:"sparc-select-country",placeholder:"Country...",type:"country",width:"resolve",height:"50px",output:"iso3",data:"countries_select2",breadcrumbs:[{name:"country",value:"iso3"},{name:"hazard",value:"hazard"},{name:"month",value:"month_num"}]},{id:"sparc-select-hazard",placeholder:"Hazard...",type:"hazard",width:"resolve",height:"50px",output:"hazard",data:"hazards_select2",breadcrumbs:[{name:"country",value:"iso3"},{name:"hazard",value:"hazard"},{name:"month",value:"month_num"}]}],geosite.filters["default"]=function(){return function(e,t){return e||t}},geosite.filters.join=function(){return function(e,t){return Array.isArray(e)?e.join(t):e}},geosite.filters.first=function(){return function(e){return Array.isArray(e)?e[0]:e}},geosite.filters.last=function(){return function(e){if(!Array.isArray(e))return e;if(0!=e.length)return e[e.length-1]}},geosite.filters.formatInteger=function(){return function(e,t,a){if("delimited"==t){a=a||",";for(var n=e.toString(),i=new RegExp("(\\d+)(\\d{3})","gi");i.test(n);)n=n.replace(i,"$1"+a+"$2");return n}return e.toString()}},geosite.filters.formatArray=function(){return function(e){return Array.isArray(e)?0==e.length?"":1==e.length?e[0]:2==e.length?e.join(" and "):e.slice(0,-1).join(", ")+", and "+e[e.length-1]:e}},geosite.filters.formatMonth=function(){return function(e,t){return"long"==t?months_long[e-1]:"short3"==t||"short_3"==t?months_short_3[e-1]:e.toString()}},geosite.filters.md2html=function(){return function(e){if(void 0!=e){var t=new showdown.Converter;html=t.makeHtml(e),html=html.substring("<p>".length,html.length-"</p>".length);var a=new RegExp("(<a .*)>(.*?)</a>","gi");return html=html.replace(a,'$1 target="_blank">$2</a>'),html=html.replace(new RegExp("\n","gi"),"<br>"),html}return""}},geosite.filters.percent=function(){return function(e,t){return 100*e/t}},geosite.filters.tabLabel=function(){return function(e){return 2==e.split(" ").length?e.replace(" ","<br>"):e}},geosite.filters.as_float=function(){return function(e){return 1*e}},geosite.filters.choose=function(){return function(e,t){if(Array.isArray(t)){var a=t;return e+a[e%a.length]}var a=Array.prototype.slice.call(arguments,[1]);return a[e%a.length]}},geosite.filters.add=function(){return function(e,t){if(Array.isArray(t)){var a=t;return e+a[e%a.length]}if(arguments.length>2){var a=Array.prototype.slice.call(arguments,[1]);return e+a[e%a.length]}return e+t}},geosite.filters.default_if_undefined=function(){return function(e,t){return void 0!=e?e:t}},geosite.filters.title=function(){return function(e){return"string"===$.type(e)?e.toTitleCase():e}},geosite.filters.as_array=function(){return function(e){return $.isArray(e)?e:$.map(e,function(e,t){return{key:t,item:e}})}},geosite.filters.sortItemsByArray=function(){return function(e,t){return $.isArray(e)?(e=$.grep(e,function(e,a){return-1!=$.inArray(e.key,t)}),e.sort(function(e,a){return $.inArray(e.key,t)-$.inArray(e.key,t)}),e):e}},geosite.filters.url_shapefile=function(){return function(e,t){var a="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"SHAPE-ZIP",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geosite.filters.url_geojson=function(){return function(e,t){var a="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"json",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geosite.filters.url_kml=function(){return function(e,t){var a="";if("kml"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={mode:"download",layers:n};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.kml.url+"?"+o}return a}},geosite.filters.breakpoint=function(){return function(e,t){var a=geosite.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=a&&a.length>0?a[t]:-1}},geosite.filters.breakpoints=function(){return function(e){var t=geosite.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=t&&t.length>0?t:[]}},geosite.filters.formatBreakpoint=function(){return function(e){return Number.isInteger(e)?geosite.filters.formatInteger()(e,"delimited"," "):$.isNumeric(e)?geosite.filters.formatFloat()(e,2):""+e}},geosite.filters.formatFloat=function(){return function(e,t){return void 0!=t?e.toFixed(t):e.toString()}},geosite.filters.position_x=function(){return function(e,t,a,n){var i=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},o=i(a)-2*n;return n+o*t/e}},geosite.filters.width_x=function(){return function(e,t,a){var n=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},i=n(t)-2*a;return i/e}},geosite.filters.len=geosite.filters.length=function(){return function(e){return $.isArray(e)?e.length:0}},geosite.directives.ngX=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngX,function(e){t.attr("x",e)})}}},geosite.directives.ngY=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngY,function(e){t.attr("y",e)})}}},geosite.directives.ngWidth=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngWidth,function(e){t.attr("width",e)})}}},geosite.directives.ngR=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngR,function(e){t.attr("r",e)})}}},geosite.directives.ngFill=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngFill,function(e){t.attr("fill",e)})}}},geosite.directives.onRepeatDone=function(){return{restriction:"A",link:function(e,t,a){e.$emit(a.onRepeatDone||"repeat_done",{element:t,attributes:a})}}},geosite.directives.geositeModalLayerCarto=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_carto.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_more.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_config.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolCircle=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_circle.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolEllipse=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_ellipse.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraduated=function(){return{restrict:"EA",replace:!0,scope:{style:"=style",containerWidth:"@"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraphic=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeLegendBaselayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_baselayers.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeLegendFeaturelayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_featurelayers.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_welcome.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalAbout=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_about.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalDownload=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_download.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeBreadcrumbs=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"breadcrumbs.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeCalendar=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"calendar.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalFilterMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_filter_more.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterCheckbox=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_checkbox.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterRadio=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_radio.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterSlider=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_slider.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterContainer=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_container.tpl.html",link:function(e,t,a){}}},geosite.directives.sparcSidebarCharts=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"sparc_sidebar_charts.tpl.html",link:function(e,t,a){}}},geosite.directives.sparcModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_welcome_sparc.tpl.html",link:function(e,t,a){}}},geosite.controllers.controller_modal=function(e,t,a,n,i,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}));$(t);e.test="blah blah blah"},geosite.controllers.controller_legend=function(e,t,a,n,i,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.map_config=i,e.state=n,e.updateVariables=function(){var t=e.map_config.legendlayers,a=$.map(e.map_config.featurelayers,function(e,t){return{key:t,item:e}});a=$.grep(a,function(e,a){return-1!=$.inArray(e.key,t)}),a.sort(function(e,a){return $.inArray(e.key,t)-$.inArray(a.key,t)}),e.featurelayers=a},e.updateVariables(),e.$watch("map_config.featurelayers",e.updateVariables),e.$watch("map_config.legendlayers",e.updateVariables);$(t);e.$on("refreshMap",function(e,t){console.log("args: ",t)})},geosite.controllers.controller_map=function(e,t,a,n,i){},geosite.controllers.controller_about=function(e,t,a,n,i,o,r){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}))},geosite.controllers.controller_download=function(e,t,a,n,i,o,r){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}))},geosite.controllers.controller_breadcrumb=function(e,t,a,n){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.state=n,e.breadcrumbs=SPARC_BREADCRUMBS,setTimeout(function(){$("select",t).each(function(){var t=$(this),a=t.data("breadcrumbs"),i=t.data("placeholder"),o=t.data("initialData"),r=t.data("width"),l=t.data("height"),s="sparc-select-dropdown";t.select2({data:geosite.initial_data.data[o],placeholder:i,allowClear:!1,width:r,height:l,dropdownCssClass:s}),t.on("select2:select",function(i){var o=i.params.data.id;e.$apply(function(){var a=t.data("output");e.state[a]=o});for(var r="",l=0;l<a.length;l++){var s=a[l];void 0!=n[s.value]&&(r+="/"+s.name+"/"+e.state[s.value])}console.log("Going to url ",r),window.location.href=r})})},10)},geosite.controllers.controller_calendar=function(e,t,a,n,i,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.state=n,e.months=MONTHS_ALL,e.$on("refreshMap",function(t,a){"state"in a&&(e.state=a.state)})},geosite.controllers.controller_filter=function(e,t,a,n,i,o,r){var l=geosite.initial_data.layers.popatrisk.data.summary.all.max.at_admin2_month;angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.filters=o.featurelayers.popatrisk.filters,setTimeout(function(){$(t).on("change","input:checkbox",function(t){console.log(t);var a=this,n=$(a).data("output"),i={},o=$(a).parents(".btn-group:first"),n=o.data("output");void 0==i[n]&&(i[n]=[]),o.find("input").each(function(){$(this).is(":checked")&&i[n].push($(this).data("value"))}),geosite.api.intend("filterChanged",{layer:"popatrisk",filter:i},e)}),$(t).on("change",'input:radio[name="cat"]',function(t){console.log(t);var a=$(this).data("output"),n={};n[a]=this.value,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:n},e)}),$(".geosite-filter-slider",$(t)).each(function(){var t=$(this).find(".geosite-filter-slider-slider"),a=$(this).find(".geosite-filter-slider-label"),o=t.data("type"),r=t.data("output");if("ordinal"==o){var s=t.data("range"),d=i.filters.popatrisk[r],c=t.data("options");t.data("label",a),geosite.ui_init_slider_label(n,t,o,s,d),geosite.ui_init_slider_slider(n,e,t,o,s,c.indexOf(d),0,c.length-1,1)}else{var s=t.data("range"),p=geosite.assert_float(t.data("min-value"),0),u=t.data("step");if("boolean"==$.type(s)&&s||"true"==s.toLowerCase()){var g=void 0!=l&&"summary"==t.data("max-value")?l:geosite.assert_float(t.data("max-value"),void 0),f=i.filters.popatrisk[r];f=geosite.assert_array_length(f,2,[p,g]);var m=[Math.floor(f[0]),Math.floor(f[1])],v=Math.floor(p),y=Math.floor(g),h=Math.floor(u);t.data("label",a),geosite.ui_init_slider_label(n,t,o,s,f),geosite.ui_init_slider_slider(n,e,t,o,s,m,v,y,h),console.log(b,v,y,h,s)}else{var g=geosite.assert_float(t.data("max-value"),void 0),d=i.filters.popatrisk[r],b=Math.floor(100*d),v=Math.floor(100*p),y=Math.floor(100*g),h=Math.floor(100*u);t.data("label",a),geosite.ui_init_slider_label(n,t,o,s,d),geosite.ui_init_slider_slider(n,e,t,o,s,m,v,y,h),console.log(b,v,y,h,s)}}})},10)};var init_map=function(e){var t=L.map("map",{zoomControl:opt_b(e,"zoomControl",!1),minZoom:opt_i(e,"minZoom",3),maxZoom:opt_i(e,"maxZoom",18)});return t.setView([opt_i(e,["latitude","lat"],0),opt_i(e,["longitude","lon","lng","long"],0)],opt_i(e,["zoom","z"],0)),$.each(opt_j(e,"listeners"),function(e,a){t.on(e,a)}),t};geosite.controllers.controller_map_map=function(e,t,a,n,i,o,r,l,s){var d={click:function(e){var a=e.latlng,n={lat:a.lat,lon:a.lng};geosite.api.intend("clickedOnMap",n,t)},zoomend:function(e){var a={extent:s.map.getBounds().toBBoxString(),z:s.map.getZoom()};geosite.api.intend("viewChanged",a,t)},dragend:function(e){var a=s.map.getCenter(),n={extent:s.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.api.intend("viewChanged",n,t)},moveend:function(e){var a=s.map.getCenter(),n={extent:s.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.api.intend("viewChanged",n,t)}},c=hasHashValue(["latitude","lat","longitude","lon","lng","zoom","z"]),p=r.view;s.map=init_map({zoomControl:l.controls.zoom,minZoom:l.view.minZoom,maxZoom:l.view.maxZoom,lat:p.lat,lon:p.lon,z:p.z,listeners:d});var u=geosite.layers.init_baselayers(s.map,l.baselayers);$.extend(s.baselayers,u);var g=l.baselayers[0].id;if(s.baselayers[g].addTo(s.map),geosite.api.intend("viewChanged",{baselayer:g},t),geosite.api.intend("layerLoaded",{type:"baselayer",layer:g},t),$.each(l.featurelayers,function(e,a){"popatrisk"!=e&&"context"!=e&&geosite.layers.init_featurelayer(e,a,t,s,l)}),"context"in l.featurelayers){var f=function(e){console.log(e);var t=l.featurelayers.context,a=e.feature,n=geosite.popup.buildPopupTemplate(t.popup,t,a),o={layer:t,feature:{attributes:a.properties,geometry:{}}};return i(n)(o)};s.featurelayers.context=L.geoJson(geosite.initial_data.layers.context.data.geojson,{renderOrder:$.inArray("context",l.renderlayers),style:geosite.initial_data.layers.context.style["default"],hoverStyle:geosite.initial_data.layers.context.style.hover,onEachFeature:function(e,t){var a={maxWidth:300};t.bindPopup(f,a),t.on({mouseover:highlightFeature,mouseout:function(e){s.featurelayers.context.resetStyle(e.target)}})}})}if("popatrisk"in l.featurelayers){var m=function(e){console.log(e);var t=angular.element("#geosite-main").scope(),a=t.state,n=l.featurelayers.popatrisk,o=n.popup,r=sparc.normalize_feature(e.feature);r.attributes.popatrisk=sparc.calculate_population_at_risk(a.hazard,r,a,["vam_filter_fcs","vam_filter_csi"]);var s=geosite.popup.buildPopupContent(i,n,r,a);return setTimeout(function(){for(var e=0;e<o.panes.length;e++){var t=o.panes[e];if("charts"in t)for(var a=0;a<t.charts.length;a++){var n=t.charts[a],i=buildGroupsAndColumnsForAdmin2(n,geosite.initial_data.layers.popatrisk,r.attributes.admin2_code),l={groups:i.groups,columns:i.columns,bullet_width:function(e,t){return"rp25"==e.id?6:12}};buildHazardChart(n,geosite.initial_data.layers.popatrisk,l)}}},1e3),s};s.featurelayers.popatrisk=L.geoJson(geosite.initial_data.layers.popatrisk.data.geojson,{renderOrder:$.inArray("popatrisk",l.renderlayers),style:geosite.initial_data.layers.popatrisk.style["default"],hoverStyle:geosite.initial_data.layers.popatrisk.style.hover,onEachFeature:function(e,t){var a={maxWidth:300};t.bindPopup(m,a),t.on({mouseover:highlightFeature,mouseout:function(e){s.featurelayers.popatrisk.resetStyle(e.target)},click:function(e){}})}}),geosite.layers.init_featurelayer_post(t,s,"popatrisk",s.featurelayers.popatrisk,l.featurelayers.popatrisk.visible),c||s.map.fitBounds(s.featurelayers.popatrisk.getBounds())}$("#geosite-map-sidebar-toggle-left").click(function(){$(this).toggleClass("sidebar-open sidebar-left-open"),$("#geosite-sidebar-left, #geosite-map").toggleClass("sidebar-open sidebar-left-open"),setTimeout(function(){s.map.invalidateSize({animate:!0,pan:!1})},2e3)}),t.$on("refreshMap",function(e,t){console.log("Refreshing map...");var a=t.state.view.baselayer;$.each(s.baselayers,function(e,t){var n=e==a;s.map.hasLayer(t)&&!n?s.map.removeLayer(t):!s.map.hasLayer(t)&&n&&s.map.addLayer(t)});var n=t.state.view.featurelayers;$.each(s.featurelayers,function(e,t){var a=-1!=$.inArray(e,n);s.map.hasLayer(t)&&!a?s.map.removeLayer(t):!s.map.hasLayer(t)&&a&&s.map.addLayer(t)});var i=$.grep(layersAsArray(s.featurelayers),function(e){return-1!=$.inArray(e.id,n)}),o=sortLayers($.map(i,function(e,t){return e.layer}),!0),r=($.map(s.baselayers,function(e,t){return{id:t,layer:e}}),$.map($.grep(layersAsArray(s.baselayers),function(e){return e.id==a}),function(e,t){return e.layer}));updateRenderOrder(r.concat(o)),"popatrisk"in s.featurelayers&&s.featurelayers.popatrisk.setStyle(geosite.initial_data.layers.popatrisk.style["default"]),"context"in s.featurelayers&&s.featurelayers.context.setStyle(geosite.initial_data.layers.context.style["default"]),setTimeout(function(){s.map._onResize()},0)}),t.$on("changeView",function(e,t){console.log("Refreshing map..."),void 0!=t.layer&&s.map.fitBounds(s.featurelayers[t.layer].getBounds())}),t.$on("openPopup",function(e,t){console.log("Refreshing map..."),void 0!=t.featureLayer&&void 0!=t.feature&&void 0!=t.location&&geosite.popup.openPopup(i,t.featureLayer,t.feature,t.location,s.map,angular.element("#geosite-main").scope().state)})},geosite.controllers.controller_sidebar_sparc=function(e,t,a,n,i,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.charts=i.charts,setTimeout(function(){$(t);if(void 0!=e.charts)for(var a=0;a<e.charts.length;a++){var n={};"drought"==e.charts[a].hazard&&(n.bullet_width=function(e,t){return"p6"==e.id?6:"p8"==e.id?8:16}),buildHazardChart(e.charts[a],geosite.initial_data.layers.popatrisk,n)}},10)};var buildPageURL=function(e,t,a){var n=e(t.pages[a.page])(a),i=[],o=a.view;void 0!=o&&void 0!=o.z&&void 0!=o.lat&&void 0!=o.lon&&(i.push("z="+o.z),i.push("lat="+o.lat.toFixed(4)),i.push("lon="+o.lon.toFixed(4)));var r=a.filters;return r&&$.each(a.filters,function(e,t){$.each(t,function(t,a){i.push(e+":"+t+"="+a)})}),i.length>0&&(n+="#"+i.join("&")),n};geosite.controllers.controller_main=function(e,t,a,n,i,o,r,l,s,d){t.map_config=l,t.state=geosite.init_state(r,s),t.live=d,t.refreshMap=function(e){t.$broadcast("refreshMap",{state:e})},t.$on("toggleModal",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.id,i=t.modal||{};i.show=!1;var o=angular.element("#"+n).scope(),r={state:a.state};"static"in t&&(r=$.extend(r,t["static"])),$.each(t.dynamic,function(e,t){angular.isArray(t)?"map_config"==t[0]?r[e]=extract(t.slice(1),l):"state"==t[0]&&(r[e]=extract(t.slice(1),r.state)):r[e]=t}),o.$apply(function(){o=$.extend(o,r),setTimeout(function(){var e=$("#"+n),t=o.tab;void 0!=t?(e.find(".nav-tabs li").each(function(){var e=$(this),a=e.find("a").attr("href").substring(1);t==a?e.addClass("active"):e.removeClass("active")}),e.find(".tab-pane").each(function(){var e=$(this);t==e.attr("id")?e.addClass("in active"):e.removeClass("in active")})):(e.find(".nav-tabs li").slice(0,1).addClass("active"),e.find(".nav-tabs li").slice(1).removeClass("active"),e.find(".tab-pane").slice(0,1).addClass("in active"),e.find(".tab-pane").slice(1).removeClass("in active")),$("#"+n).modal(i),$("#"+n).modal("toggle")},0)})}),t.$on("stateChanged",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.$apply(function(){n.state=$.extend(n.state,a);var t=buildPageURL(e,l,n.state);history.replaceState(r,"",t),n.refreshMap(n.state)})}),t.$on("filterChanged",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.$apply(function(){n.state.filters[a.layer]=$.extend(n.state.filters[a.layer],a.filter);var t=buildPageURL(e,l,n.state);history.replaceState(r,"",t),n.refreshMap(n.state)})}),t.$on("selectStyle",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.$apply(function(){n.state.styles[a.layer]=a.style;var t=buildPageURL(e,l,n.state);history.replaceState(r,"",t),n.refreshMap(n.state)})}),t.$on("viewChanged",function(t,a){console.log("event",t),console.log("args",a);var n=angular.element("#geosite-main").scope();n.state.view=$.extend(n.state.view,a);var i=buildPageURL(e,l,n.state);history.replaceState(r,"",i)}),t.$on("layerLoaded",function(e,t){var a=angular.element("#geosite-main").scope(),n=t.type,i=t.layer,o=void 0!=t.visible?t.visible:!0;"featurelayer"==n?o&&a.state.view.featurelayers.push(i):"baselayer"==n&&(a.state.view.baselayer=i)}),t.$on("showLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.layer;-1==$.inArray(n,a.state.view.featurelayers)&&(a.state.view.featurelayers.push(n),a.refreshMap(a.state))}),t.$on("hideLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.layer,i=$.inArray(n,a.state.view.featurelayers);-1!=i&&(a.state.view.featurelayers.splice(i,1),a.refreshMap(a.state))}),t.$on("showLayers",function(e,t){console.log("event",e),console.log("args",t);for(var a=angular.element("#geosite-main").scope(),n=t.layers,i=0;i<n.length;i++){var o=n[i];-1==$.inArray(o,a.state.view.featurelayers)&&(a.state.view.featurelayers.push(o),a.refreshMap(a.state))}}),t.$on("hideLayers",function(e,t){console.log("event",e),console.log("args",t);for(var a=angular.element("#geosite-main").scope(),n=t.layers,i=0;i<n.length;i++){var o=t.layers[i],r=$.inArray(o,a.state.view.featurelayers);-1!=r&&(a.state.view.featurelayers.splice(r,1),a.refreshMap(a.state))}}),t.$on("switchBaseLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.state.view.baselayer=t.layer,a.refreshMap(a.state)}),t.$on("zoomToLayer",function(e,t){var a=angular.element("#geosite-main").scope(),n=t.layer,i=$.inArray(n,a.state.view.featurelayers);-1!=i&&a.$broadcast("changeView",{layer:n})}),t.$on("clickedOnMap",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=a.state.view.z,r=a.state.view.featurelayers;console.log("visibleFeatureLayers",r);for(var s={},d={},c=[],p=0;p<r.length;p++){var u=l.featurelayers[r[p]];if(void 0!=u.wfs)for(var g={service:"wfs",version:u.wfs.version,request:"GetFeature",srsName:"EPSG:4326"},f=new L.LatLng(t.lat,t.lon),m=geosite.tilemath.point_to_bbox(t.lon,t.lat,n,4).join(","),v=u.wfs.layers||u.wms.layers||[],y=0;y<v.length;y++){typeName=v[y];var h=u.wfs.url+"?"+$.param($.extend(g,{typeNames:typeName,bbox:m}));c.push(h),d[typeName.toLowerCase()]=geosite.layers.aggregate_fields(u),s[typeName.toLowerCase()]=u}}o.all(geosite.http.build_promises(i,c)).then(function(e){var t=geosite.http.build_features(e,d);if(console.log("Features: ",t),t.length>0){var n=geosite.vecmath.getClosestFeatureAndLocation(t,f),i=s[n.feature.featuretype];a.$broadcast("openPopup",{featureLayer:i,feature:n.feature,location:{lon:n.location.lng,lat:n.location.lat}})}})})};var init_sparc_controller_main=function(e,t){geosite.init_controller(e,t,geosite.controllers.controller_main),geosite.init_controllers(e,t,[{selector:".geosite-controller.geosite-about",controller:geosite.controllers.controller_about},{selector:".geosite-controller.geosite-download",controller:geosite.controllers.controller_download}]),$(".geosite-controller.geosite-sidebar.geosite-sidebar-left",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_sidebar_sparc)}),$(".geosite-controller.geosite-sidebar.geosite-sidebar-right",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_sidebar_editor)}),$(".geosite-controller.geosite-map",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_map),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-map-map",controller:geosite.controllers.controller_map_map},{selector:".geosite-controller.sparc-map-calendar",controller:geosite.controllers.controller_calendar},{selector:".geosite-controller.sparc-map-breadcrumb",controller:geosite.controllers.controller_breadcrumb},{selector:".geosite-controller.geosite-map-filter",controller:geosite.controllers.controller_filter},{selector:".geosite-controller.geosite-map-legend",controller:geosite.controllers.controller_legend},{selector:".geosite-controller.sparc-welcome",controller:geosite.controllers.controller_sparc_welcome}]),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-controller-modal",controller:geosite.controllers.controller_modal}])})};geosite.controllers.controller_sparc_welcome=function(e,t,a,n,i,o,r){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),setTimeout(function(){$("#country-input, #hazard-input",t).each(function(){var e=$(this),t=(e.data("placeholder"),e.data("initialData")),a=(e.data("width"),e.data("height"),e.data("template-empty")),n=(e.data("template-suggestion"),new Bloodhound({identify:function(e){return e.text},datumTokenizer:function(e){return Bloodhound.tokenizers.whitespace(e.text)},queryTokenizer:Bloodhound.tokenizers.whitespace,local:geosite.initial_data.data[t]}));e.typeahead(null,{name:e.attr("name"),minLength:1,limit:10,hint:!1,highlight:!0,displayKey:"text",source:n,templates:{empty:a,suggestion:function(e){return"<p><strong>"+e.text+"</strong> - "+e.id+"</p>"},footer:function(e){return"<div>Searched for <strong>"+e.query+"</strong></div>"}}}).on("blur",function(e){var t=n.get($(this).val());$("#"+$(this).data("backend")).val(1==t.length?t[0].id:null).trigger("input").change()}).on("typeahead:change",function(e,t){console.log("Event: ",e,t);var a=n.get(t);$("#"+$(this).data("backend")).val(1==a.length?a[0].id:null).trigger("input").change()}).on("typeahead:select typeahead:autocomplete typeahead:cursorchange",function(e,t){console.log("Event: ",e,t);$("#"+$(this).data("backend")).val("id"in t?t.id:null).trigger("input").change()})}),$(".btn-clear",t).click(function(){var e=$("#"+$(this).data("clear"));e.val(null);var t=$("#"+e.data("backend"));t.val(null),t.trigger("input"),t.change()}),sparc.welcome({scope:e})},10)};