var buildGroupsAndColumnsForCountry=function(e,t){var a=[[]],o=[];if("cyclone"==e.hazard)$.each(t.data.summary.prob_class,function(e,t){var r=t.by_month;o.push([e].concat(r)),a[0].push(e)});else if("drought"==e.hazard){for(var r=0;r<e.groups.length;r++){var i=e.group_prefix,n=e.group_key,s=e.group_modifier,l=e.groups[r],c=t.data.summary[n][""+l*s].by_month;o.push([i+l].concat(c)),a[0].push(i+l)}o.reverse()}else if("flood"==e.hazard){for(var r=0;r<e.groups.length;r++){var i=e.group_prefix,n=e.group_key,l=e.groups[r],s=e.group_modifier,c=t.data.summary[n][""+l*s].by_month;o.push([i+l].concat(c)),a[0].push(i+l)}o.reverse()}return{groups:a,columns:o}},buildGroupsAndColumnsForAdmin2=function(e,t,a){var o=[[]],r=[];if("flood"==e.hazard){for(var i=0;i<e.returnPeriods.length;i++){var n=e.returnPeriods[i],s=t.data.summary.admin2[a].rp[""+n].by_month;r.push(["rp"+n].concat(s)),o[0].push("rp"+n)}r.reverse()}else"cyclone"==e.hazard&&$.each(t.data.summary.admin2[a].prob_class,function(e,t){var a=t.by_month;r.push([e].concat(a)),o[0].push(e)});return{groups:o,columns:r}},buildHazardChart=function(e,t,a){var o=void 0;if("bar"==e.type){o=void 0!=a&&void 0!=a.groups&&void 0!=a.columns?{groups:a.groups,columns:a.columns}:buildGroupsAndColumnsForCountry(e,t);var r=void 0;"bullet"==e.subtype?(r={bullet:!0,width:function(e,t){return"rp25"==e.id?8:16},offset:function(e,t){return 0}},void 0!=a&&void 0!=a.bullet_width&&(r.width=a.bullet_width)):r={width:{ratio:.6}};var i={x:{},y:{}};void 0!=e.axis&&void 0!=e.axis.x&&"months"==e.axis.x.type&&(i.x.tick={format:function(e){return months_short_3[e].toTitleCase()}}),i.y.label=e.axis.y.label,i.y.tick={format:d3.format("s,")};c3.generate({bindto:"#"+e.id,data:{columns:o.columns,groups:o.groups,type:"bar",colors:e.colors},axis:i,bar:r})}};geosite.config={click_radius:2};var init_start=function(e){var t=geosite.map_config.featurelayers.popatrisk.urls.summary.replace("{iso3}",geosite.initial_state.iso3).replace("{hazard}",geosite.initial_state.hazard),a=geosite.map_config.featurelayers.popatrisk.urls.geojson.replace("{iso3}",geosite.initial_state.iso3).replace("{hazard}",geosite.initial_state.hazard),o=geosite.map_config.featurelayers.context.urls.summary.replace("{iso3}",geosite.initial_state.iso3),r=geosite.map_config.featurelayers.context.urls.geojson.replace("{iso3}",geosite.initial_state.iso3),i=geosite.map_config.featurelayers.vam.urls.geojson.replace("{iso3}",geosite.initial_state.iso3);$.when($.ajax({dataType:"json",url:t}),$.ajax({dataType:"json",url:a}),$.ajax({dataType:"json",url:o}),$.ajax({dataType:"json",url:r}),$.ajax({dataType:"json",url:i})).done(function(t,a,o,r,i){geosite.initial_data.layers.popatrisk.data.summary=t[0],geosite.initial_data.layers.popatrisk.data.geojson=a[0],geosite.initial_data.layers.context.data.summary=o[0],geosite.initial_data.layers.context.data.geojson=r[0],geosite.initial_data.layers.vam.data.geojson=i[0],init_main_app(e)})},init_main_app=function(e){geosite.app=app=angular.module(e,["ngRoute","ngSanitize"]),void 0!=geosite.templates&&$.each(geosite.templates,function(e,t){app.run(function(a){a.put(e,t)})}),void 0!=geosite.filters&&$.each(geosite.filters,function(e,t){app.filter(e,t)}),void 0!=geosite.directives&&$.each(geosite.directives,function(e,t){app.directive(e,t)}),app.factory("state",function(){return $.extend({},geosite.initial_state)}),app.factory("stateschema",function(){return $.extend({},geosite.state_schema)}),app.factory("popatrisk_config",function(){return $.extend({},geosite.initial_data.layers.popatrisk)}),app.factory("context_config",function(){return $.extend({},geosite.initial_data.layers.context)}),app.factory("map_config",function(){return $.extend({},geosite.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{popatrisk:void 0}}}),geosite.init_controller_base(app),init_sparc_controller_main($(".geosite-controller.geosite-main"),app),angular.bootstrap(document,[e])},init_sparc_controller=function(e,t){var a=e.data("controllerName");e.data("controllerType");t.controller(a,function(e,t){init_intents($(t),e)})};geosite.style_cyclone=function(e,t,a,o){for(var r={},i=t.filters.popatrisk,n=i.prob_class_max,s=i.popatrisk_range,l=months_short_3[t.month-1],c=0,d=0;d<e.properties.addinfo.length;d++){var p=e.properties.addinfo[d];p.category==i.category&&0!=p.prob_class_max&&p.prob_class_max<=n&&(console.log("matched prob_class",n),c+=p[l])}if(void 0!=i.fcs){var u=100;if(0==i.fcs.length)u=0;else if("poor,borderline,acceptable"!=i.fcs.join(",")){console.log("FCS Filter:",i.fcs);var g=e.properties.admin1_code,m=$.grep(geosite.initial_data.layers.vam.data.geojson.features,function(e,t){return e.properties.admin1_code==g});if(m.length>0){var f=m[0];void 0!=f.properties.vam.fcs&&(u=0,$.each(f.properties.vam.fcs,function(e,t){-1!=$.inArray(e,i.fcs)&&(u+=t)}))}}c*=u/100}if(void 0!=i.csi){var y=100;if(0==i.csi.length)y=0;else if("no,low,medium,high"!=i.csi.join(",")){var g=e.properties.admin1_code,m=$.grep(geosite.initial_data.layers.vam.data.geojson.features,function(e,t){return e.properties.admin1_code==g});if(m.length>0){var f=m[0];void 0!=f.properties.vam.csi&&(y=0,$.each(f.properties.vam.csi,function(e,t){-1!=$.inArray(e,i.csi)&&(y+=t)}))}}c*=y/100}if(c>=s[0]&&c<=s[1]){for(var h=a.featurelayers.popatrisk.cartography[0].colors.ramp,v=o.data.summary.all.breakpoints.natural,b=void 0,d=0;d<v.length;d++)if(c<v[d]){b=h[d];break}r.fillColor=void 0==b?h[h.length-1]:b}else r.opacity=0,r.fillOpacity=0;return r},geosite.style_drought=function(e,t,a,o){for(var r={},i=t.filters.popatrisk,n=i.prob_class_max/100,s=i.popatrisk_range,l=months_short_3[t.month-1],c=0,d=0;d<e.properties.addinfo.length;d++){var p=e.properties.addinfo[d];p.month==l&&p.prob<n&&(c+=p.popatrisk)}if(c>=s[0]&&c<=s[1]){for(var u=a.featurelayers.popatrisk.cartography[0].colors.ramp,g=o.data.summary.all.breakpoints.natural,m=void 0,d=0;d<g.length;d++)if(c<g[d]){m=u[d];break}r.fillColor=void 0==m?u[u.length-1]:m}else r.opacity=0,r.fillOpacity=0;return r},geosite.style_flood=function(e,t,a,o){var r={},i=t.filters.popatrisk,n=i.rp,s=i.popatrisk_range,l=months_short_3[t.month-1],c=e.properties["RP"+n.toString(10)][l];if(c>=s[0]&&c<=s[1]){for(var d=a.featurelayers.popatrisk.cartography[0].colors.ramp,p=o.data.summary.all.breakpoints.natural_adjusted,u=void 0,g=0;g<p.length;g++)if(c<p[g]){u=d[g];break}r.fillColor=void 0==u?d[d.length-1]:u}else r.opacity=0,r.fillOpacity=0;return r},geosite.style_context=function(e,t,a,o){var r={},i=a.featurelayers.context,n=(t.filters.context,t.styles.context),s=$.grep(i.cartography,function(e,t){return e.id==n}),l=1==s.length?s[0]:i.cartography[0],c=e.properties[l.mask],d=e.properties[l.attribute];if(1==c){for(var p=l.colors.ramp,u=l.breakpoints||"natural_adjusted",g=o.data.summary.all.breakpoints[u],m=void 0,f=0;f<g.length;f++)if(d<g[f]){m=p[f];break}r.fillColor=void 0==m?p[p.length-1]:m}else r.fillColor=l.colors.outside;return r};var buildPageURL=function(e,t){var a=geosite.pages[e].replace("{iso3}",t.iso3).replace("{hazard}",t.hazard).replace("{month}",t.month),o=[],r=t.view;void 0!=r&&void 0!=r.z&&void 0!=r.lat&&void 0!=r.lon&&(o.push("z="+r.z),o.push("lat="+r.lat.toFixed(4)),o.push("lon="+r.lon.toFixed(4)));var i=t.filters;return i&&$.each(t.filters,function(e,t){$.each(t,function(t,a){o.push(e+":"+t+"="+a)})}),o.length>0&&(a+="#"+o.join("&")),a};geosite.utility={},geosite.utility.getClosestFeature=function(e,t){var a=void 0,o=0;if(void 0!=e&&e.length>0){a=e[0],o=t.distanceTo(e[0].geometry);for(var r=0;r<e.length;r++){var i=e[r];t.distanceTo(i.geometry)<o&&(a=i,o=t.distanceTo(i.geometry))}}return a},geosite.templates={},geosite.templates["modal_layer_carto.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }} / Cartography</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Style:</b></p>\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="style in layer.cartography track by $index">\n            <a\n              class="geosite-intent"\n              href="#modal-layer-carto-style-{{ style.id }}"\n              aria-controls="modal-layer-carto-style-{{ style.id }}"\n              data-intent-name="selectStyle"\n              data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;,&quot;style&quot;:&quot;{{ style.id }}&quot;}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="style.title | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="style in layer.cartography track by $index"\n            id="modal-layer-carto-style-{{ style.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Attribute: </b><span>{{ style.attribute | default:"Not styled by attribute" }}</span></span><br>\n            <span><b>Mask: </b><span ng-bind-html="style.mask | md2html | default:\'No Mask\'"></span></span><br>\n            <span><b>Description: </b><span ng-bind-html="style.description | md2html | default:\'Not specified\'"></span></span>\n            <br>\n            <br>\n            <div\n              ng-if="style.type == \'graduated\'"\n              geosite-symbol-graduated>\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'circle\'"\n              geosite-symbol-circle>\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'graphic\'"\n              geosite-symbol-graphic>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_layer_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <span ng-bind-html="layer.description | md2html | default:\'No description given.\'"></span>\n      <br><br><b>Source:</b> {{ layer.source.name | default:"Not specified" }}\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["symbol_circle.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <circle\n    cx="50%" cy="50%" r="{{ style.legend.symbol.radius }}"\n    fill="{{ style.styles.default.static.color }}" stroke-width="1" stroke="#000000"></circle>\n  </svg>\n</div>\n',geosite.templates["symbol_graduated.tpl.html"]='<div>\n  <div style="display: inline-block; vertical-align:top;" >{{ style.label_left }}</div>\n  <svg width="300px" height="50px" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <rect\n      ng-repeat-start="color in style.colors.ramp track by $index"\n      x="{{ idx|percent:numberOfColors }}%"\n      y="0"\n      width="{{ 1|percent:numberOfColors }}%"\n      height="50px"\n      fill="{{ color }}"\n      stroke-width="1"\n      stroke="#000000"/>\n    <text\n      ng-repeat-end\n      x="{{ idx|as_float|addFloat:0.5|percent:numberOfColors }}%"\n      y="50%"\n      text-anchor="middle"\n      fill="white"\n      font-size="18px">{{ idx }}</text>\n  </svg>\n  <div style="display: inline-block; vertical-align:top;">{{ style.label_right }}</div>\n</div>\n',geosite.templates["symbol_graphic.tpl.html"]='<img src="{{ style }}" />\n',geosite.directives.geositeModalLayerCarto=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_carto.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_more.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolCircle=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"symbol_circle.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraduated=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraphic=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.controllers.controller_modal=function(e,t,a,o,r,i,n){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}));$(t);e.test="blah blah blah"},geosite.controllers.controller_breadcrumb=function(e,t,a,o){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),$("select",t).each(function(){var t=$(this),a=t.data("breadcrumbs"),r=t.data("placeholder"),i=t.data("initialData"),n=t.data("width"),s=t.data("height"),l="sparc-select-dropdown";t.select2({data:geosite.initial_data.data[i],placeholder:r,allowClear:!1,width:n,height:s,dropdownCssClass:l}),t.on("select2:select",function(r){var i=r.params.data.id;e.$apply(function(){var a=t.data("output");e.state[a]=i});for(var n="",s=0;s<a.length;s++){var l=a[s];void 0!=o[l.value]&&(n+="/"+l.name+"/"+e.state[l.value])}console.log("Going to url ",n),window.location.href=n})})},geosite.controllers.controller_legend=function(e,t,a,o,r,i,n){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}));var s=$(t);e.$on("refreshMap",function(e,t){console.log("args: ",t);var a=s.find(".geosite-map-legend-featurelayers");$(".geosite-map-legend-item",a).each(function(){var e=$(this).data("layer"),a=($(this).find(".geosite-map-legend-item-symbol:first"),t.state.styles[e]),o=$.grep(geosite.map_config.featurelayers.context.cartography,function(e,t){return e.id==a});o.length>0?o[0]:void 0})})},geosite.controllers.controller_filter=function(e,t,a,o,r,i,n){var s=r.data.summary.all.max.at_admin2_month;angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),$(t).on("change","input:checkbox",function(t){console.log(t);var a=this,o=$(a).data("output"),r={},i=$(a).parents(".btn-group:first"),o=i.data("output");void 0==r[o]&&(r[o]=[]),i.find("input").each(function(){$(this).is(":checked")&&r[o].push($(this).data("value"))}),geosite.intend("filterChanged",{layer:"popatrisk",filter:r},e)}),$(t).on("change",'input:radio[name="cat"]',function(t){console.log(t);var a=$(this).data("output"),o={};o[a]=this.value,geosite.intend("filterChanged",{layer:"popatrisk",filter:o},e)}),$(".geosite-filter-slider",$(t)).each(function(){var t=$(this).find(".geosite-filter-slider-slider"),a=$(this).find(".geosite-filter-slider-label"),r=t.data("type"),i=t.data("output");if("ordinal"==r){var n=t.data("range"),l=o.filters.popatrisk[i],c=t.data("options");t.data("label",a),geosite.ui_init_slider_label(t,r,n,l),geosite.ui_init_slider_slider(e,t,r,n,c.indexOf(l),0,c.length-1,1)}else{var n=t.data("range"),d=geosite.assert_float(t.data("min-value"),void 0),p=t.data("step");if("true"==n.toLowerCase()){var u=void 0!=s?s:geosite.assert_float(t.data("max-value"),void 0),g=o.filters.popatrisk[i];g=geosite.assert_array_length(g,2,[d,u]);var m=[Math.floor(g[0]),Math.floor(g[1])],f=Math.floor(d),y=Math.floor(u),h=Math.floor(p);t.data("label",a),geosite.ui_init_slider_label(t,r,n,g),geosite.ui_init_slider_slider(e,t,r,n,m,f,y,h),console.log(v,f,y,h,n)}else{var u=geosite.assert_float(t.data("max-value"),void 0),l=o.filters.popatrisk[i],v=Math.floor(100*l),f=Math.floor(100*d),y=Math.floor(100*u),h=Math.floor(100*p);t.data("label",a),geosite.ui_init_slider_label(t,r,n,l),geosite.ui_init_slider_slider(e,t,r,n,m,f,y,h),console.log(v,f,y,h,n)}}})},geosite.controllers.controller_map=function(e,t,a,o,r,i){};var init_map=function(e){var t=L.map("map",{zoomControl:opt_b(e,"zoomControl",!1),minZoom:opt_i(e,"minZoom",3),maxZoom:opt_i(e,"maxZoom",18)});return t.setView([opt_i(e,["latitude","lat"],0),opt_i(e,["longitude","lon","lng","long"],0)],opt_i(e,["zoom","z"],0)),$.each(opt_j(e,"listeners"),function(e,a){t.on(e,a)}),t};geosite.controllers.controller_map_map=function(e,t,a,o,r,i,n,s,l,c,d){var p={click:function(e){var a=e.latlng,o={lat:a.lat,lon:a.lng};geosite.intend("clickedOnMap",o,t)},zoomend:function(e){var a={extent:d.map.getBounds().toBBoxString(),z:d.map.getZoom()};geosite.intend("viewChanged",a,t)},dragend:function(e){var a=d.map.getCenter(),o={extent:d.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.intend("viewChanged",o,t)},moveend:function(e){var a=d.map.getCenter(),o={extent:d.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.intend("viewChanged",o,t)}},u=hasHashValue(["latitude","lat","longitude","lon","lng","zoom","z"]),g=n.view;d.map=init_map({zoomControl:c.controls.zoom,minZoom:c.view.minZoom,maxZoom:c.view.maxZoom,lat:g.lat,lon:g.lon,z:g.z,listeners:p});var m=geosite.layers.init_baselayers(d.map,c.baselayers);$.extend(d.baselayers,m);var f=c.baselayers[0].id;d.baselayers[f].addTo(d.map),geosite.intend("viewChanged",{baselayer:f},t),geosite.intend("layerLoaded",{type:"baselayer",layer:f},t),$.each(c.featurelayers,function(e,a){"popatrisk"!=e&&"context"!=e&&geosite.layers.init_featurelayer(e,a,t,d,c)});var y=function(e){console.log(e);var t=e.feature,a=angular.element("#geosite-main").scope(),o=a.state,i=o.filters.popatrisk,n=popup_templates.popatrisk,l=$.extend({},t.properties),d=months_short_3[o.month-1],p=months_long[o.month-1];if(l.month=p,"flood"==o.hazard){var u=i.rp;l.popatrisk=t.properties["RP"+u.toString(10)][d]}else if("cyclone"==o.hazard){for(var g=i.prob_class_max,m=0,f=0;f<t.properties.addinfo.length;f++){var y=t.properties.addinfo[f];y.category==i.category&&0!=y.prob_class_max&&y.prob_class_max<=g&&(console.log("matched prob_class",g),m+=y[d])}l.popatrisk=m}var h=c.featurelayers.popatrisk.popup.chart;return l.chartID=h.id,setTimeout(function(){var e=buildGroupsAndColumnsForAdmin2(h,s,t.properties.admin2_code),a={groups:e.groups,columns:e.columns,bullet_width:function(e,t){return"rp25"==e.id?6:12}};buildHazardChart(h,s,a)},1e3),r(n)(l)},h=function(e){console.log(e);var t=c.featurelayers.context,a=e.feature,o=geosite.popup.buildPopupTemplate(t.popup,t,a),i={layer:t,feature:{attributes:a.properties,geometry:{}}};return r(o)(i)};d.featurelayers.context=L.geoJson(l.data.geojson,{renderOrder:$.inArray("context",c.renderlayers),style:l.style["default"],hoverStyle:l.style.hover,onEachFeature:function(e,t){var a={maxWidth:300};t.bindPopup(h,a),t.on({mouseover:highlightFeature,mouseout:function(e){d.featurelayers.context.resetStyle(e.target)}})}}),d.featurelayers.popatrisk=L.geoJson(s.data.geojson,{renderOrder:$.inArray("popatrisk",c.renderlayers),style:s.style["default"],hoverStyle:s.style.hover,onEachFeature:function(e,t){var a={maxWidth:300};t.bindPopup(y,a),t.on({mouseover:highlightFeature,mouseout:function(e){d.featurelayers.popatrisk.resetStyle(e.target)},click:function(e){}})}}),geosite.layers.init_featurelayer_post(t,d,"popatrisk",d.featurelayers.popatrisk,c.featurelayers.popatrisk.visible),u||d.map.fitBounds(d.featurelayers.popatrisk.getBounds()),$("#geosite-map-sidebar-toggle-left").click(function(){$(this).toggleClass("sidebar-open sidebar-left-open"),$("#geosite-sidebar-left, #geosite-map").toggleClass("sidebar-open sidebar-left-open"),setTimeout(function(){d.map.invalidateSize({animate:!0,pan:!1})},2e3)}),t.$on("refreshMap",function(e,t){console.log("Refreshing map...");var a=t.state.view.baselayer;$.each(d.baselayers,function(e,t){var o=e==a;d.map.hasLayer(t)&&!o?d.map.removeLayer(t):!d.map.hasLayer(t)&&o&&d.map.addLayer(t)});var o=t.state.view.featurelayers;$.each(d.featurelayers,function(e,t){var a=-1!=$.inArray(e,o);d.map.hasLayer(t)&&!a?d.map.removeLayer(t):!d.map.hasLayer(t)&&a&&d.map.addLayer(t)});var r=$.grep(layersAsArray(d.featurelayers),function(e){return-1!=$.inArray(e.id,o)}),i=sortLayers($.map(r,function(e,t){return e.layer}),!0),n=($.map(d.baselayers,function(e,t){return{id:t,layer:e}}),$.map($.grep(layersAsArray(d.baselayers),function(e){return e.id==a}),function(e,t){return e.layer}));updateRenderOrder(n.concat(i)),d.featurelayers.popatrisk.setStyle(s.style["default"]),d.featurelayers.context.setStyle(l.style["default"]),setTimeout(function(){d.map._onResize()},0)}),t.$on("changeView",function(e,t){console.log("Refreshing map..."),void 0!=t.layer&&d.map.fitBounds(d.featurelayers[t.layer].getBounds())}),t.$on("openPopup",function(e,t){console.log("Refreshing map..."),void 0!=t.featureLayer&&void 0!=t.feature&&void 0!=t.location&&geosite.popup.openPopup(r,t.featureLayer,t.feature,t.location,d.map)})},geosite.controllers.controller_sidebar_sparc=function(e,t,a,o,r,i,n){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}));$(t);if(void 0!=i.charts)for(var s=0;s<i.charts.length;s++){var l={};"drought"==i.charts[s].hazard&&(l.bullet_width=function(e,t){return"p6"==e.id?6:"p8"==e.id?8:16}),buildHazardChart(i.charts[s],r,l)}},geosite.controllers.controller_main=function(e,t,a,o,r,i,n,s,l,c){e.state=geosite.init_state(i,s),e.live=c,e.$on("toggleModal",function(e,t){console.log("event",e),console.log("args",t);var a=t.id,o=angular.element("#"+a).scope(),r={};$.each(t.dynamic,function(e,t){r[e]=angular.isArray(t)?extract(t,n):t}),o.$apply(function(){o=$.extend(o,r),setTimeout(function(){$("#"+a).modal("toggle")},0)})}),e.$on("stateChanged",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.$apply(function(){a.state=$.extend(a.state,t);var e=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(i,"",e),a.$broadcast("refreshMap",{state:a.state})})}),e.$on("filterChanged",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.$apply(function(){a.state.filters[t.layer]=$.extend(a.state.filters[t.layer],t.filter);var e=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(i,"",e),a.$broadcast("refreshMap",{state:a.state})})}),e.$on("selectStyle",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.$apply(function(){a.state.styles[t.layer]=t.style;var e=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(i,"",e),a.$broadcast("refreshMap",{state:a.state})})}),e.$on("viewChanged",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.state.view=$.extend(a.state.view,t);var o=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(i,"",o)}),e.$on("layerLoaded",function(e,t){var a=angular.element("#geosite-main").scope(),o=t.type,r=t.layer,i=void 0!=t.visible?t.visible:!0;"featurelayer"==o?i&&a.state.view.featurelayers.push(r):"baselayer"==o&&(a.state.view.baselayer=r)}),e.$on("showLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),o=t.layer;-1==$.inArray(o,a.state.view.featurelayers)&&(a.state.view.featurelayers.push(o),a.$broadcast("refreshMap",{state:a.state}))}),e.$on("hideLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),o=t.layer,r=$.inArray(o,a.state.view.featurelayers);-1!=r&&(a.state.view.featurelayers.splice(r,1),a.$broadcast("refreshMap",{state:a.state}))}),e.$on("switchBaseLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.state.view.baselayer=t.layer,a.$broadcast("refreshMap",{state:a.state})}),e.$on("zoomToLayer",function(e,t){var a=angular.element("#geosite-main").scope(),o=t.layer,r=$.inArray(o,a.state.view.featurelayers);-1!=r&&a.$broadcast("changeView",{layer:o})}),e.$on("clickedOnMap",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),i=a.state.view.z,s=a.state.view.featurelayers;console.log("visibleFeatureLayers",s);for(var l={},c={},d=[],p=0;p<s.length;p++){var u=n.featurelayers[s[p]];if(void 0!=u.wfs)for(var g={service:"wfs",version:u.wfs.version,request:"GetFeature",srsName:"EPSG:4326"},m=new L.LatLng(t.lat,t.lon),f=geosite.tilemath.point_to_bbox(t.lon,t.lat,i,4).join(","),y=u.wfs.layers||u.wms.layers||[],h=0;h<y.length;h++){typeName=y[h];var v=u.wfs.url+"?"+$.param($.extend(g,{typeNames:typeName,bbox:f}));d.push(v),c[typeName.toLowerCase()]=geosite.layers.aggregate_fields(u),l[typeName.toLowerCase()]=u}}r.all(geosite.http.build_promises(o,d)).then(function(e){var t=geosite.http.build_features(e,c);if(console.log("Features: ",t),t.length>0){var o=geosite.vecmath.getClosestFeatureAndLocation(t,m),r=l[o.feature.featuretype];a.$broadcast("openPopup",{featureLayer:r,feature:o.feature,location:{lon:o.location.lng,lat:o.location.lat}})}})})};var init_sparc_controller_main=function(e,t){geosite.init_controller(e,t,geosite.controllers.controller_main),$(".geosite-controller.geosite-sidebar.geosite-sidebar-left",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_sidebar_sparc)}),$(".geosite-controller.geosite-sidebar.geosite-sidebar-right",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_sidebar_editor)}),$(".geosite-controller.geosite-map",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_map),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-map-map",controller:geosite.controllers.controller_map_map},{selector:".geosite-controller.sparc-map-calendar",controller:void 0},{selector:".geosite-controller.sparc-map-breadcrumb",controller:geosite.controllers.controller_breadcrumb},{selector:".geosite-controller.geosite-map-filter",controller:geosite.controllers.controller_filter},{selector:".geosite-controller.geosite-map-legend",controller:geosite.controllers.controller_legend}]),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-controller-modal",controller:geosite.controllers.controller_modal}])})};