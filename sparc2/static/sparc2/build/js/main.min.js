var buildGroupsAndColumnsForCountry=function(e,t){var a=[[]],n=[];if("cyclone"==e.hazard)$.each(t.data.summary.prob_class,function(e,t){var i=t.by_month;n.push([e].concat(i)),a[0].push(e)});else if("drought"==e.hazard){for(var i=0;i<e.groups.length;i++){var o=e.group_prefix,r=e.group_key,l=e.group_modifier,s=e.groups[i],d=t.data.summary[r][""+s*l].by_month;n.push([o+s].concat(d)),a[0].push(o+s)}n.reverse()}else if("flood"==e.hazard){for(var i=0;i<e.groups.length;i++){var o=e.group_prefix,r=e.group_key,s=e.groups[i],l=e.group_modifier,d=t.data.summary[r][""+s*l].by_month;n.push([o+s].concat(d)),a[0].push(o+s)}n.reverse()}return{groups:a,columns:n}},buildGroupsAndColumnsForAdmin2=function(e,t,a){var n=[[]],i=[];if("flood"==e.hazard){for(var o=0;o<e.returnPeriods.length;o++){var r=e.returnPeriods[o],l=t.data.summary.admin2[a].rp[""+r].by_month;i.push(["rp"+r].concat(l)),n[0].push("rp"+r)}i.reverse()}else"cyclone"==e.hazard&&$.each(t.data.summary.admin2[a].prob_class,function(e,t){var a=t.by_month;i.push([e].concat(a)),n[0].push(e)});return{groups:n,columns:i}},buildHazardChart=function(e,t,a){var n=void 0;if("bar"==e.type){n=void 0!=a&&void 0!=a.groups&&void 0!=a.columns?{groups:a.groups,columns:a.columns}:buildGroupsAndColumnsForCountry(e,t);var i=void 0;"bullet"==e.subtype?(i={bullet:!0,width:function(e,t){return"rp25"==e.id?8:16},offset:function(e,t){return 0}},void 0!=a&&void 0!=a.bullet_width&&(i.width=a.bullet_width)):i={width:{ratio:.6}};var o={x:{},y:{}};void 0!=e.axis&&void 0!=e.axis.x&&"months"==e.axis.x.type&&(o.x.tick={format:function(e){return months_short_3[e].toTitleCase()}}),o.y.label=e.axis.y.label,o.y.tick={format:d3.format("s,")};c3.generate({bindto:"#"+(e.element||e.id),data:{columns:n.columns,groups:n.groups,type:"bar",colors:e.colors},axis:o,bar:i})}};geosite.config={click_radius:2};var init_start=function(e){var t=geosite.map_config.featurelayers.popatrisk.urls.summary.replace("{iso3}",geosite.initial_state.iso3).replace("{hazard}",geosite.initial_state.hazard),a=geosite.map_config.featurelayers.popatrisk.urls.geojson.replace("{iso3}",geosite.initial_state.iso3).replace("{hazard}",geosite.initial_state.hazard),n=geosite.map_config.featurelayers.context.urls.summary.replace("{iso3}",geosite.initial_state.iso3),i=geosite.map_config.featurelayers.context.urls.geojson.replace("{iso3}",geosite.initial_state.iso3),o=geosite.map_config.featurelayers.vam.urls.geojson.replace("{iso3}",geosite.initial_state.iso3);$.when($.ajax({dataType:"json",url:t}),$.ajax({dataType:"json",url:a}),$.ajax({dataType:"json",url:n}),$.ajax({dataType:"json",url:i}),$.ajax({dataType:"json",url:o})).done(function(t,a,n,i,o){geosite.initial_data.layers.popatrisk.data.summary=t[0],geosite.initial_data.layers.popatrisk.data.geojson=a[0],geosite.initial_data.layers.context.data.summary=n[0],geosite.initial_data.layers.context.data.geojson=i[0],geosite.initial_data.layers.vam.data.geojson=o[0],init_main_app(e)})},init_main_app=function(e){geosite.app=app=angular.module(e,["ngRoute","ngSanitize"]),void 0!=geosite.templates&&$.each(geosite.templates,function(e,t){app.run(function(a){a.put(e,t)})}),void 0!=geosite.filters&&$.each(geosite.filters,function(e,t){app.filter(e,t)}),void 0!=geosite.directives&&$.each(geosite.directives,function(e,t){app.directive(e,t)}),app.factory("state",function(){return $.extend({},geosite.initial_state)}),app.factory("stateschema",function(){return $.extend({},geosite.state_schema)}),app.factory("popatrisk_config",function(){return $.extend({},geosite.initial_data.layers.popatrisk)}),app.factory("context_config",function(){return $.extend({},geosite.initial_data.layers.context)}),app.factory("map_config",function(){return $.extend({},geosite.map_config)}),app.factory("live",function(){return{map:void 0,baselayers:{},featurelayers:{popatrisk:void 0}}}),geosite.init_controller_base(app),init_sparc_controller_main($(".geosite-controller.geosite-main"),app),angular.bootstrap(document,[e])},init_sparc_controller=function(e,t){var a=e.data("controllerName");e.data("controllerType");t.controller(a,function(e,t){init_intents($(t),e)})};geosite.vam_filter_fcs=function(e,t,a){if(void 0!=t.fcs){var n=100;if(0==t.fcs.length)n=0;else if("poor,borderline,acceptable"!=t.fcs.join(",")){console.log("FCS Filter:",t.fcs);var i=a.properties.admin1_code,o=$.grep(geosite.initial_data.layers.vam.data.geojson.features,function(e,t){return e.properties.admin1_code==i});if(o.length>0){var r=o[0];void 0!=r.properties.vam.fcs&&(n=0,$.each(r.properties.vam.fcs,function(e,a){-1!=$.inArray(e,t.fcs)&&(n+=a)}))}}e*=n/100}return e},geosite.vam_filter_csi=function(e,t,a){if(void 0!=t.csi){var n=100;if(0==t.csi.length)n=0;else if("no,low,medium,high"!=t.csi.join(",")){var i=a.properties.admin1_code,o=$.grep(geosite.initial_data.layers.vam.data.geojson.features,function(e,t){return e.properties.admin1_code==i});if(o.length>0){var r=o[0];void 0!=r.properties.vam.csi&&(n=0,$.each(r.properties.vam.csi,function(e,a){-1!=$.inArray(e,t.csi)&&(n+=a)}))}}e*=n/100}return e},geosite.style_cyclone=function(e,t,a,n){for(var i={},o=t.filters.popatrisk,r=o.prob_class_max,l=o.popatrisk_range,s=months_short_3[t.month-1],d=0,c=0;c<e.properties.addinfo.length;c++){var p=e.properties.addinfo[c];p.category==o.category&&0!=p.prob_class_max&&p.prob_class_max<=r&&(console.log("matched prob_class",r),d+=p[s])}if(d=geosite.vam_filter_fcs(d,o,e),d=geosite.vam_filter_csi(d,o,e),d>=l[0]&&d<=l[1]){for(var u=a.featurelayers.popatrisk.cartography[0].colors.ramp,g=n.data.summary.all.breakpoints.natural,f=void 0,c=0;c<g.length;c++)if(d<g[c]){f=u[c];break}i.fillColor=void 0==f?u[u.length-1]:f}else i.opacity=0,i.fillOpacity=0;return i},geosite.style_drought=function(e,t,a,n){for(var i={},o=t.filters.popatrisk,r=o.prob_class_max/100,l=o.popatrisk_range,s=months_short_3[t.month-1],d=0,c=0;c<e.properties.addinfo.length;c++){var p=e.properties.addinfo[c];p.month==s&&p.prob<r&&(d+=p.popatrisk)}if(d=geosite.vam_filter_fcs(d,o,e),d=geosite.vam_filter_csi(d,o,e),d>=l[0]&&d<=l[1]){for(var u=a.featurelayers.popatrisk.cartography[0].colors.ramp,g=n.data.summary.all.breakpoints.natural,f=void 0,c=0;c<g.length;c++)if(d<g[c]){f=u[c];break}i.fillColor=void 0==f?u[u.length-1]:f}else i.opacity=0,i.fillOpacity=0;return i},geosite.style_flood=function(e,t,a,n){var i={},o=t.filters.popatrisk,r=o.rp,l=o.popatrisk_range,s=months_short_3[t.month-1],d=e.properties["RP"+r.toString(10)][s];if(d=geosite.vam_filter_fcs(d,o,e),d=geosite.vam_filter_csi(d,o,e),d>=l[0]&&d<=l[1]){for(var c=a.featurelayers.popatrisk.cartography[0].colors.ramp,p=n.data.summary.all.breakpoints.natural_adjusted,u=void 0,g=0;g<p.length;g++)if(d<p[g]){u=c[g];break}i.fillColor=void 0==u?c[c.length-1]:u}else i.opacity=0,i.fillOpacity=0;return i},geosite.style_context=function(e,t,a,n){var i={},o=a.featurelayers.context,r=(t.filters.context,t.styles.context),l=$.grep(o.cartography,function(e,t){return e.id==r}),s=1==l.length?l[0]:o.cartography[0],d=e.properties[s.mask],c=e.properties[s.attribute];if(1==d){for(var p=s.colors.ramp,u=s.breakpoints||"natural_adjusted",g=n.data.summary.all.breakpoints[u],f=void 0,m=0;m<g.length;m++)if(c<g[m]){f=p[m];break}i.fillColor=void 0==f?p[p.length-1]:f}else i.fillColor=s.colors.outside;return i};var buildPageURL=function(e,t){var a=geosite.pages[e].replace("{iso3}",t.iso3).replace("{hazard}",t.hazard).replace("{month}",t.month),n=[],i=t.view;void 0!=i&&void 0!=i.z&&void 0!=i.lat&&void 0!=i.lon&&(n.push("z="+i.z),n.push("lat="+i.lat.toFixed(4)),n.push("lon="+i.lon.toFixed(4)));var o=t.filters;return o&&$.each(t.filters,function(e,t){$.each(t,function(t,a){n.push(e+":"+t+"="+a)})}),n.length>0&&(a+="#"+n.join("&")),a};geosite.utility={},geosite.utility.getClosestFeature=function(e,t){var a=void 0,n=0;if(void 0!=e&&e.length>0){a=e[0],n=t.distanceTo(e[0].geometry);for(var i=0;i<e.length;i++){var o=e[i];t.distanceTo(o.geometry)<n&&(a=o,n=t.distanceTo(o.geometry))}}return a},geosite.templates={},geosite.templates["breadcrumbs.tpl.html"]='<div>\n  <div>\n    <a class="btn btn-primary btn-large" title="Explore" href="/explore">Explore &gt;&gt;</a>\n  </div>\n  <div\n    ng-repeat="bc in breadcrumbs track by $index">\n    <select\n      id="{{ bc.id }}"\n      data-output="{{ bc.output }}"\n      data-width="{{ bc.width }}"\n      data-height="{{ bc.height }}"\n      data-initial-data="{{ bc.data }}"\n      data-breadcrumbs="{{ bc.breadcrumbs }}">\n      <option\n        ng-if="bc.type == \'country\'"\n        value="{{ state.iso3 }}"\n        selected="selected">{{ state.country_title }}</option>\n      <option\n        ng-if="bc.type == \'hazard\'"\n        value="{{ state.hazard }}"\n        selected="selected">{{ state.hazard_title }}</option>\n      <option\n        ng-if="bc.type != \'country\' && bc.type != \'hazard\'"\n        value="placeholder"\n        selected="selected">{{ bc.placeholder }}</option>\n    </select>\n  </div>\n</div>\n',geosite.templates["calendar.tpl.html"]='<ul class="nav nav-justified geosite-radio-group">\n  <li\n    ng-repeat="month in months track by $index">\n    <a\n      ng-class="state.month == month.num ? \'btn btn-primary selected geosite-intent geosite-radio geosite-on\' : \'btn btn-default geosite-intent geosite-radio\'"\n      title="{{ month.long }}"\n      href="/country/{{ state.iso3 }}/hazard/{{ state.hazard }}/month/{{ month.num }}"\n      data-intent-name="stateChanged"\n      data-intent-data="{&quot;month&quot;: {{ month.num }} }"\n      data-intent-class-on="btn-primary selected"\n      data-intent-class-off="btn-default" ng-bind-html="month.short3 | title"></a>\n  </li>\n</ul>\n',geosite.templates["modal_layer_carto.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }} / Cartography</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Style:</b></p>\n          <li\n            role="presentation"\n            ng-class="$first ? \'active\' : \'\'"\n            ng-repeat="style in layer.cartography track by $index">\n            <a\n              class="geosite-intent"\n              href="#modal-layer-carto-style-{{ style.id }}"\n              aria-controls="modal-layer-carto-style-{{ style.id }}"\n              data-intent-name="selectStyle"\n              data-intent-data="{&quot;layer&quot;:&quot;{{ layerID }}&quot;,&quot;style&quot;:&quot;{{ style.id }}&quot;}"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;"\n              ng-bind-html="style.title | default:\'Default\' | tabLabel"></a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n            ng-repeat="style in layer.cartography track by $index"\n            id="modal-layer-carto-style-{{ style.id }}"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Attribute: </b><span>{{ style.attribute | default:"Not styled by attribute" }}</span></span><br>\n            <span><b>Mask: </b><span ng-bind-html="style.mask | md2html | default:\'No Mask\'"></span></span><br>\n            <span><b>Description: </b><span ng-bind-html="style.description | md2html | default:\'Not specified\'"></span></span>\n            <br>\n            <br>\n            <div\n              ng-if="style.type == \'graduated\'"\n              geosite-symbol-graduated\n              style="style"\n              width="{{ \'300px\' }}">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'circle\'"\n              geosite-symbol-circle\n              style="style">\n            </div>\n            <div\n              ng-if="style.legend.symbol.type == \'graphic\'"\n              geosite-symbol-graphic\n              style="style">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_layer_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li role="presentation" class="active">\n            <a\n              href="#modal-layer-more-general"\n              aria-controls="modal-layer-more-general"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">General</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-source"\n              aria-controls="modal-layer-more-source"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Source</a>\n          </li>\n          <li ng-if="layer.wms" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wms"\n              aria-controls="modal-layer-more-wms"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WMS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-wfs"\n              aria-controls="modal-layer-more-wfs"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">WFS</a>\n          </li>\n          <li ng-if="layer.wfs" role="presentation" class="">\n            <a\n              href="#modal-layer-more-download"\n              aria-controls="modal-layer-more-download"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Download</a>\n          </li>\n        </ul>\n        <div class="tab-content">\n          <div\n            id="modal-layer-more-general"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span ng-bind-html="layer.description | md2html | default:\'No description given.\'"></span>\n            <br><br><b>Type:</b> {{ layer.type }}\n            <br><br><b>Source:</b> {{ layer.source.name | default:"Not specified" }}\n          </div>\n          <div\n            ng-if="layer.source"\n            id="modal-layer-more-source"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Name:</b> {{ layer.source.name | default:"Not specified" }}</span><br>\n            <span><b>Attribution:</b> {{ layer.source.attribution | default:"Not specified" }}</span><br>\n            <span><b>URL:</b> {{ layer.source.url | default:"Not specified" }}</span><br>\n          </div>\n          <div\n            ng-if="layer.wms"\n            id="modal-layer-more-wms"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wms.url | default:"Not specified" }}</span><br>\n            <span><b>Layers:</b> {{ layer.wms.layers|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Styles:</b> {{ layer.wms.styles|join:\', \'|default:"Not specified" }}</span><br>\n            <span><b>Format:</b> {{ layer.wms.format | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wms.version | default:"Not specified" }}</span><br>\n            <span><b>Transparent:</b> {{ layer.wms.transparent | default:"No" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetCapabilities">Capabilities</a><br>\n            <span><a target="_blank" href="{{ layer.wms.url }}?SERVICE=WMS&Request=GetLegendGraphic&format=image/png&layer={{ layer.wms.layers|first }}">Legend Graphic</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-wfs"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>URL:</b> {{ layer.wfs.url | default:"Not specified" }}</span><br>\n            <span><b>Version:</b> {{ layer.wfs.version | default:"Not specified" }}</span><br>\n            <hr>\n            <span><a target="_blank" href="{{ layer.wfs.url }}?service=wfs&request=DescribeFeatureType&version={{ layer.wfs.version }}">Describe Feature Type</a><br>\n          </div>\n          <div\n            ng-if="layer.wfs"\n            id="modal-layer-more-download"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            <span><b>Download Shapefile</b>: <a target="_blank" href="{{ layer | url_shapefile }}">All</a>, <a target="_blank" href="{{ layer | url_shapefile:state }}">Current Extent</a><br>\n            <span><b>Download GeoJSON</b>: <a target="_blank" href="{{ layer | url_geojson }}">All</a>, <a target="_blank" href="{{ layer | url_geojson:state }}">Current Extent</a><br>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_layer_config.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>\n      <h4 class="modal-title" id="myModalLabel">Layer / {{ layer.title }}</h4>\n    </div>\n    <div class="modal-body">\n      <div>\n        <!-- Nav tabs -->\n        <ul class="nav nav-tabs" role="tablist">\n          <li class="active" role="presentation">\n            <a href="#modal-layer-config-input"\n              aria-controls="modal-layer-config-input"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Configure</a>\n          </li>\n          <li class="" role="presentation">\n            <a href="#modal-layer-config-output"\n              aria-controls="modal-layer-config-output"\n              role="tab"\n              data-toggle="tab"\n              style="padding-left:8px; padding-right: 8px;">Output</a>\n          </li>\n        </ul>\n        <!-- Tab panes -->\n        <div class="tab-content">\n          <div\n            id="modal-layer-config-input"\n            class="tab-pane fade in active"\n            role="tabpanel"\n            style="padding: 10px;">\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Title</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Title</label>\n                <input\n                  id="layer-config-title"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geosite-field-type="text"\n                  ng-model="layer.title"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.title }}">\n              </div>\n            </div>\n            <div class="form-group row" style="margin:0; padding-top: 10px; padding-bottom: 10px;">\n              <div class="col-md-3"><h5>Description</h5></div>\n              <div class="col-md-9">\n                <label for="layer-config-title" class="sr-only control-label">Description</label>\n                <input\n                  id="layer-config-description"\n                  type="text"\n                  class="form-control"\n                  placeholder="Title ..."\n                  data-geosite-field-type="text"\n                  ng-model="layer.description"\n                  ng-change="validateField()"\n                  required\n                  value="{{ layer.Description }}">\n              </div>\n            </div>\n          </div>\n          <div\n            id="modal-layer-config-output"\n            class="tab-pane fade"\n            role="tabpanel"\n            style="padding: 10px;">\n            {{ layer | json }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["symbol_circle.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <circle\n      cx="50%"\n      cy="50%"\n      ng-r="{{ style.legend.symbol.radius }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geosite.templates["symbol_ellipse.tpl.html"]='<div>\n  <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n    <ellipse\n      cx="50%"\n      cy="50%"\n      ng-rx="{{ style.legend.symbol.width }}"\n      ng-ry="{{ style.legend.symbol.height }}"\n      ng-fill="{{ style.styles.default.static.color }}"\n      stroke-width="1"\n      stroke="#000000"></circle>\n  </svg>\n</div>\n',geosite.templates["symbol_graduated.tpl.html"]='<div>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.label_left | md2html"></div>\n  <svg\n    ng-attr-width="{{ width }}"\n    height="50px"\n    version="1.0"\n    xmlns="http://www.w3.org/2000/svg">\n    <rect\n      ng-repeat-start="color in style.colors.ramp track by $index"\n      ng-attr-x="{{ $index|percent:style.colors.ramp.length }}%"\n      ng-attr-y="{{ \'0\' }}"\n      ng-attr-width="{{ 1|percent:style.colors.ramp.length }}%"\n      height="50px"\n      ng-attr-fill="{{ color }}"\n      stroke-width="1"\n      stroke="#000000"/>\n    <text\n      ng-repeat-end\n      ng-attr-x="{{ $index|as_float|addFloat:0.5|percent:style.colors.ramp.length }}%"\n      ng-attr-y="{{ \'50%\' }}"\n      text-anchor="middle"\n      ng-attr-fill="{{ \'white\' }}"\n      font-size="18px">{{ $index }}</text>\n  </svg>\n  <div\n    style="display: inline-block; vertical-align:top;"\n    ng-bind-html="style.label_right | md2html"></div>\n</div>\n',geosite.templates["symbol_graphic.tpl.html"]='<i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n',geosite.templates["legend_baselayers.tpl.html"]='<div class="geosite-map-legend-baselayers geosite-radio-group">\n  <div\n    ng-repeat="layer in map_config.baselayers track by $index"\n    ng-if="layer.legend!==undefined"\n    class="geosite-map-legend-item noselect"\n    data-layer="{{ layer.id }}">\n    <div class="geosite-map-legend-item-left">\n      <div class="geosite-map-legend-item-icon geosite-map-legend-item-more">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-more&quot;,&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;baselayers&quot;,&quot;{{ $index }}&quot;]}}">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-visibility">\n           <a\n             ng-class=" $first ? \'geosite-map-legend-item-visibility-button geosite-intent geosite-radio geosite-on\' : \'geosite-map-legend-item-visibility-button geosite-intent geosite-radio\'"\n             data-intent-name="switchBaseLayer"\n             data-intent-data="{&quot;layer&quot;:&quot;{{ layer.id }}&quot;}"\n             data-intent-class-on="geosite-on"\n             data-intent-class-off="">\n             <i class="fa fa-eye geosite-on"></i><i class="fa fa-eye-slash geosite-off"></i>\n           </a>\n         </div><!--\n      --><div class="geosite-map-legend-item-symbol" style="width: 10px;"></div>\n    </div><!--\n    --><div class="geosite-map-legend-item-right">\n      <div class="geosite-map-legend-item-label" style="width: 100%;">\n        <span ng-bind-html="layer.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geosite.templates["legend_featurelayers.tpl.html"]='<div class="geosite-map-legend-featurelayers">\n  <div\n    ng-repeat="layer in featurelayers track by $index"\n    ng-init="layerIndex = $index"\n    ng-if="layer.item.legend!==undefined"\n    class="geosite-map-legend-item noselect"\n    data-layer="{{ layer.key }}">\n    <div class="geosite-map-legend-item-left">\n      <div class="geosite-map-legend-item-icon geosite-map-legend-item-config" style="display:none;">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-config&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}">\n          <i class="fa fa-cog"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-more">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-more&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}">\n          <i class="fa fa-info-circle"></i>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-icon geosite-map-legend-item-visibility">\n         <a\n           ng-class="(layer.item.visible != undefined ? layer.item.visible : true ) ? \'geosite-map-legend-item-visibility-button geosite-intent geosite-toggle\' : \'geosite-map-legend-item-visibility-button geosite-intent geosite-toggle geosite-off\'"\n           data-intent-names="[&quot;showLayer&quot;,&quot;hideLayer&quot;]"\n           data-intent-data="{&quot;layer&quot;:&quot;{{ layer.key }}&quot;}">\n           <i class="fa fa-eye geosite-on"></i><i class="fa fa-eye-slash geosite-off"></i>\n         </a>\n     </div><!--\n     --><div\n          ng-class="layer.item.type == \'geojson\' ? \'geosite-map-legend-item-icon geosite-map-legend-item-zoomto\': \'geosite-map-legend-item-icon geosite-map-legend-item-zoomto fade disabled\'">\n        <a\n          class="geosite-map-legend-item-zoomto-button geosite-intent"\n          data-intent-name="zoomToLayer"\n          data-intent-data="{&quot;layer&quot;:&quot;{{ layer.key }}&quot;}">\n          <i class="fa fa-compress"></i>\n        </a>\n      </div>\n    </div><!--\n    --><div class="geosite-map-legend-item-right">\n      <div\n        ng-if="layer.item.cartography[0].legend.symbol"\n        class="geosite-map-legend-item-symbol">\n        <a\n          class="geosite-intent"\n          data-intent-name="toggleModal"\n          data-intent-data="{&quot;id&quot;:&quot;geosite-modal-layer-carto&quot;,&quot;static&quot;:{&quot;layerID&quot;:&quot;{{ layer.key }}&quot;},&quot;dynamic&quot;:{&quot;layer&quot;:[&quot;featurelayers&quot;,&quot;{{ layer.key }}&quot;]}}">\n          <div ng-if="layer.item.cartography[0].legend.symbol.type == \'circle\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <circle\n                cx="50%"\n                cy="50%"\n                ng-r="{{ layer.item.cartography[0].legend.symbol.radius }}"\n                ng-fill="{{ layer.item.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div ng-if="layer.item.cartography[0].legend.symbol.type == \'ellipse\'">\n            <svg width="100%" height="100%" version="1.0" xmlns="http://www.w3.org/2000/svg">\n              <ellipse\n                cx="50%"\n                cy="50%"\n                ng-rx="{{ layer.item.cartography[0].legend.symbol.width }}"\n                ng-ry="{{ layer.item.cartography[0].legend.symbol.height }}"\n                ng-fill="{{ layer.item.cartography[0].styles.default.static.color }}"\n                stroke-width="1"\n                stroke="#000000"></circle>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.item.cartography[0].legend.symbol.type == \'graduated\'">\n            <svg\n              ng-attr-width="{{ layer.item.cartography[0].legend.symbol.width }}"\n              height="100%"\n              version="1.0"\n              xmlns="http://www.w3.org/2000/svg">\n              <rect\n                ng-repeat="color in layer.item.cartography[0].colors.ramp track by $index"\n                ng-attr-x="{{ $index|percent:layer.item.cartography[0].colors.ramp.length }}%"\n                y="0"\n                ng-attr-width="{{ 1|percent:layer.item.cartography[0].colors.ramp.length }}%"\n                ng-attr-height="{{ layer.item.cartography[0].legend.symbol.height }}"\n                ng-attr-fill="{{ color }}"\n                stroke-width="1"\n                stroke="#000000"/>\n            </svg>\n          </div>\n          <div\n            ng-if="layer.item.cartography[0].legend.symbol.type == \'graphic\'">\n            <i class="fa fa-image" style="color:black; font-size: 20px;"></i>\n          </div>\n        </a>\n      </div><!--\n      --><div class="geosite-map-legend-item-label">\n        <span ng-bind-html="layer.item.legend.label | md2html"></span>\n      </div>\n    </div>\n  </div>\n</div>\n',geosite.templates["modal_filter_more.tpl.html"]='<div class="modal-dialog" role="document">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>\n      <h4 class="modal-title" id="myModalLabel">Filter / {{ filter.label }}</h4>\n    </div>\n    <div class="modal-body">\n      <span ng-bind-html="filter.description | md2html | default:\'No description given.\'"></span>\n    </div>\n    <div class="modal-footer">\n      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n    </div>\n  </div>\n</div>\n',geosite.templates["filter_checkbox.tpl.html"]='<div class="geosite-filter geosite-filter-checkbox" style="height: {{ filter.height }};">\n  <div class="geosite-filter-label">\n    <a\n      class="geosite-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geosite-modal-filter-more&quot;,&quot;dynamic&quot;:{&quot;filter&quot;:[&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div\n    class="btn-group"\n    style="float:left;"\n    data-toggle="buttons"\n    data-output="{{ filter.checkbox.output }}">\n    <label\n      ng-repeat="opt in filter.checkbox.options track by $index"\n      ng-class="opt.checked ? \'btn btn-sm btn-default active\' : \'btn btn-sm btn-default\'">\n      <input\n        type="checkbox"\n        id="{{ opt.id }}"\n        data-value="{{ opt.value }}"\n        autocomplete="off"\n        ng-checked="opt.checked || opt.selected"/>\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n',
geosite.templates["filter_radio.tpl.html"]='<div class="geosite-filter geosite-filter-radio" style="height: {{ filter.height }};">\n  <div class="geosite-filter-label">\n    <a\n      class="geosite-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geosite-modal-filter-more&quot;,&quot;dynamic&quot;:{&quot;filter&quot;:[&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div\n    class="btn-group"\n    style="float:left;"\n    data-toggle="buttons"\n    data-output="{{ filter.radio.output }}">\n    <label\n      ng-repeat="opt in filter.radio.options track by $index"\n      ng-class="opt.checked ? \'btn btn-default active\' : \'btn btn-default\'">\n      <input\n        type="radio"\n        id="{{ opt.id }}"\n        name="{{ opt.name }}"\n        value="{{ opt.value }}"\n        data-output="{{ filter.radio.output }}"\n        ng-checked="opt.checked || opt.selected"/>\n      {{ opt.label }}\n    </label>\n  </div>\n</div>\n',geosite.templates["filter_slider.tpl.html"]='<div class="geosite-filter geosite-filter-slider" style="height: {{ filter.height }};">\n  <div class="geosite-filter-label">\n    <a\n      class="geosite-intent"\n      data-intent-name="toggleModal"\n      data-intent-data="{&quot;id&quot;:&quot;geosite-modal-filter-more&quot;,&quot;dynamic&quot;:{&quot;filter&quot;:[&quot;featurelayers&quot;,&quot;popatrisk&quot;,&quot;filters&quot;,&quot;{{ $index }}&quot;]}}">\n      <i class="fa fa-info-circle"></i>\n    </a>\n    <span ng-bind-html="filter.label | md2html"></span> :\n  </div>\n  <div style="display:table; height:{{ filter.height }};padding-left:10px;padding-right:10px;">\n    <div style="display:table-cell;vertical-align:middle;">\n      <div class="geosite-filter-slider-label">Placeholder</div>\n      <div\n        class="geosite-filter-slider-slider"\n        style="width:{{ filter.slider.width }};"\n        data-type="{{ filter.slider.type }}"\n        data-value="{{ filter.slider.value ? filter.slider.value : \'\' }}"\n        data-values="{{ filter.slider.values ? filter.slider.values : \'\' }}"\n        data-range="{{ filter.slider.range == \'true\' ? \'true\': filter.slider.range }}"\n        data-output="{{ filter.slider.output }}"\n        data-min-value="{{ filter.slider.min|default_if_undefined:\'\' }}"\n        data-max-value="{{ filter.slider.max|default_if_undefined:\'\' }}"\n        data-step="{{ filter.slider.step ? filter.slider.step : \'\' }}"\n        data-options="{{ filter.slider.options ? filter.slider.options : \'\' }}"\n        data-label-template="{{ filter.slider.label }}"\n        ></div>\n    </div>\n  </div>\n</div>\n',geosite.templates["filter_container.tpl.html"]='<div id="geosite-map-filter-container" class="collapse" style="">\n  <div\n    ng-repeat="filter in filters track by $index">\n    <div geosite-filter-radio ng-if="filter.type == \'radio\'"></div>\n    <div geosite-filter-checkbox ng-if="filter.type == \'checkbox\'"></div>\n    <div geosite-filter-slider ng-if="filter.type == \'slider\'"></div>\n  </div>\n</div>\n',geosite.templates["sparc_sidebar_charts.tpl.html"]='<div class="geosite-sidebar-charts" style="width:100%;">\n  <!-- Nav tabs -->\n  <ul class="nav nav-tabs" role="tablist">\n    <p class="navbar-text" style="margin-bottom:0px;"><b>Select</b><br><b>a Chart:</b></p>\n    <li\n      role="presentation"\n      ng-class="$first ? \'active\' : \'\'"\n      ng-repeat="chart in charts track by $index">\n      <a\n        class=""\n        href="#sparc-chart-{{ chart.id }}-pane"\n        aria-controls="sparc-chart-{{ chart.id }}-pane"\n        role="tab"\n        data-toggle="tab"\n        style="padding-left:8px; padding-right: 8px;"\n        ng-bind-html="chart.title | default:\'Default\' | tabLabel"></a>\n    </li>\n  </ul>\n  <!-- Tab panes -->\n  <div class="tab-content">\n    <div\n      ng-class="$first ? \'tab-pane fade in active\' : \'tab-pane fade\'"\n      ng-repeat="chart in charts track by $index"\n      on-repeat-done="chart_done"\n      data-repeat-index="{{ $index }}"\n      id="sparc-chart-{{ chart.id }}-pane"\n      role="tabpanel"\n      style="padding: 10px;">\n      <div>\n        <h4 style="text-align:center;">{{ chart.title }}</h4>\n      </div>\n      <div\n        id="{{ chart.element }}"\n        class="geosite-sidebar-chart"\n        style="width:360px;margin:0 auto;"\n      ></div>\n    </div>\n  </div>\n</div>\n';var MONTHS_NUM=[1,2,3,4,5,6,7,8,9,10,11,12],MONTHS_LONG=["January","February","March","April","May","June","July","August","September","October","November","December"],MONTHS_SHORT3=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],MONTHS_ALL=$.map(MONTHS_NUM,function(e,t){return{num:e,short3:MONTHS_SHORT3[t],"long":MONTHS_LONG[t]}}),DAYSOFTHEWEEK=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];SPARC_BREADCRUMBS=[{id:"sparc-select-country",placeholder:"Country...",type:"country",width:"resolve",height:"50px",output:"iso3",data:"countries_select2",breadcrumbs:[{name:"country",value:"iso3"},{name:"hazard",value:"hazard"},{name:"month",value:"month_num"}]},{id:"sparc-select-hazard",placeholder:"Hazard...",type:"hazard",width:"resolve",height:"50px",output:"hazard",data:"hazards_select2",breadcrumbs:[{name:"country",value:"iso3"},{name:"hazard",value:"hazard"},{name:"month",value:"month_num"}]}],geosite.filters["default"]=function(){return function(e,t){return e||t}},geosite.filters.join=function(){return function(e,t){return Array.isArray(e)?e.join(t):e}},geosite.filters.first=function(){return function(e){return Array.isArray(e)?e[0]:e}},geosite.filters.md2html=function(){return function(e){if(void 0!=e){var t=new showdown.Converter;html=t.makeHtml(e),html=html.substring("<p>".length,html.length-"</p>".length);var a=new RegExp("(<a .*)>(.*?)</a>","gi");return html=html.replace(a,'$1 target="_blank">$2</a>'),html=html.replace("\n","<br>"),html}return""}},geosite.filters.percent=function(){return function(e,t){return 100*e/t}},geosite.filters.tabLabel=function(){return function(e){return 2==e.split(" ").length?e.replace(" ","<br>"):e}},geosite.filters.as_float=function(){return function(e){return 1*e}},geosite.filters.addFloat=function(){return function(e,t){return e+t}},geosite.filters.default_if_undefined=function(){return function(e,t){return void 0!=e?e:t}},geosite.filters.title=function(){return function(e){return"string"===$.type(e)?e.toTitleCase():e}},geosite.filters.as_array=function(){return function(e){return $.isArray(e)?e:$.map(e,function(e,t){return{key:t,item:e}})}},geosite.filters.sortItemsByArray=function(){return function(e,t){return $.isArray(e)?(e=$.grep(e,function(e,a){return-1!=$.inArray(e.key,t)}),e.sort(function(e,a){return $.inArray(e.key,t)-$.inArray(e.key,t)}),e):e}},geosite.filters.url_shapefile=function(){return function(e,t){var a="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"SHAPE-ZIP",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geosite.filters.url_geojson=function(){return function(e,t){var a="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"json",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var o=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");a=e.wfs.url+"?"+o}return a}},geosite.directives.ngX=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngX,function(e){t.attr("x",e)})}}},geosite.directives.ngY=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngY,function(e){t.attr("y",e)})}}},geosite.directives.ngWidth=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngWidth,function(e){t.attr("width",e)})}}},geosite.directives.ngR=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngR,function(e){t.attr("r",e)})}}},geosite.directives.ngFill=function(){return{scope:!0,link:function(e,t,a){e.$watch(a.ngFill,function(e){t.attr("fill",e)})}}},geosite.directives.onRepeatDone=function(){return{restriction:"A",link:function(e,t,a){e.$emit(a.onRepeatDone||"repeat_done",{element:t,attributes:a})}}},geosite.directives.geositeBreadcrumbs=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"breadcrumbs.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeCalendar=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"calendar.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerCarto=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_carto.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_more.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalLayerConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_config.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolCircle=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_circle.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolEllipse=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_ellipse.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraduated=function(){return{restrict:"EA",replace:!0,scope:{style:"=style",width:"@"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeSymbolGraphic=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeLegendBaselayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_baselayers.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeLegendFeaturelayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_featurelayers.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeModalFilterMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_filter_more.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterCheckbox=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_checkbox.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterRadio=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_radio.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterSlider=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_slider.tpl.html",link:function(e,t,a){}}},geosite.directives.geositeFilterContainer=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"filter_container.tpl.html",link:function(e,t,a){}}},geosite.directives.sparcSidebarCharts=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"sparc_sidebar_charts.tpl.html",link:function(e,t,a){}}},geosite.controllers.controller_modal=function(e,t,a,n,i,o,r){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e}));$(t);e.test="blah blah blah"},geosite.controllers.controller_breadcrumb=function(e,t,a,n){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.state=n,e.breadcrumbs=SPARC_BREADCRUMBS,setTimeout(function(){$("select",t).each(function(){var t=$(this),a=t.data("breadcrumbs"),i=t.data("placeholder"),o=t.data("initialData"),r=t.data("width"),l=t.data("height"),s="sparc-select-dropdown";t.select2({data:geosite.initial_data.data[o],placeholder:i,allowClear:!1,width:r,height:l,dropdownCssClass:s}),t.on("select2:select",function(i){var o=i.params.data.id;e.$apply(function(){var a=t.data("output");e.state[a]=o});for(var r="",l=0;l<a.length;l++){var s=a[l];void 0!=n[s.value]&&(r+="/"+s.name+"/"+e.state[s.value])}console.log("Going to url ",r),window.location.href=r})})},10)},geosite.controllers.controller_calendar=function(e,t,a,n,i,o,r){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.state=n,e.months=MONTHS_ALL,e.$on("refreshMap",function(t,a){"state"in a&&(e.state=a.state)})},geosite.controllers.controller_legend=function(e,t,a,n,i,o,r){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.map_config=o,e.state=n,e.updateVariables=function(){var t=e.map_config.legendlayers,a=$.map(e.map_config.featurelayers,function(e,t){return{key:t,item:e}});a=$.grep(a,function(e,a){return-1!=$.inArray(e.key,t)}),a.sort(function(e,a){return $.inArray(e.key,t)-$.inArray(a.key,t)}),e.featurelayers=a},e.updateVariables(),e.$watch("map_config.featurelayers",e.updateVariables),e.$watch("map_config.legendlayers",e.updateVariables);var l=$(t);e.$on("refreshMap",function(e,t){console.log("args: ",t);var a=l.find(".geosite-map-legend-featurelayers");$(".geosite-map-legend-item",a).each(function(){var e=$(this).data("layer"),a=($(this).find(".geosite-map-legend-item-symbol:first"),t.state.styles[e]),n=$.grep(geosite.map_config.featurelayers.context.cartography,function(e,t){return e.id==a});n.length>0?n[0]:void 0})})},geosite.controllers.controller_filter=function(e,t,a,n,i,o,r){var l=i.data.summary.all.max.at_admin2_month;angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.filters=o.featurelayers.popatrisk.filters,setTimeout(function(){$(t).on("change","input:checkbox",function(t){console.log(t);var a=this,n=$(a).data("output"),i={},o=$(a).parents(".btn-group:first"),n=o.data("output");void 0==i[n]&&(i[n]=[]),o.find("input").each(function(){$(this).is(":checked")&&i[n].push($(this).data("value"))}),geosite.intend("filterChanged",{layer:"popatrisk",filter:i},e)}),$(t).on("change",'input:radio[name="cat"]',function(t){console.log(t);var a=$(this).data("output"),n={};n[a]=this.value,geosite.intend("filterChanged",{layer:"popatrisk",filter:n},e)}),$(".geosite-filter-slider",$(t)).each(function(){var t=$(this).find(".geosite-filter-slider-slider"),a=$(this).find(".geosite-filter-slider-label"),i=t.data("type"),o=t.data("output");if("ordinal"==i){var r=t.data("range"),s=n.filters.popatrisk[o],d=t.data("options");t.data("label",a),geosite.ui_init_slider_label(t,i,r,s),geosite.ui_init_slider_slider(e,t,i,r,d.indexOf(s),0,d.length-1,1)}else{var r=t.data("range"),c=geosite.assert_float(t.data("min-value"),0),p=t.data("step");if("boolean"==$.type(r)&&r||"true"==r.toLowerCase()){var u=void 0!=l?l:geosite.assert_float(t.data("max-value"),void 0),g=n.filters.popatrisk[o];g=geosite.assert_array_length(g,2,[c,u]);var f=[Math.floor(g[0]),Math.floor(g[1])],m=Math.floor(c),y=Math.floor(u),h=Math.floor(p);t.data("label",a),geosite.ui_init_slider_label(t,i,r,g),geosite.ui_init_slider_slider(e,t,i,r,f,m,y,h),console.log(v,m,y,h,r)}else{var u=geosite.assert_float(t.data("max-value"),void 0),s=n.filters.popatrisk[o],v=Math.floor(100*s),m=Math.floor(100*c),y=Math.floor(100*u),h=Math.floor(100*p);t.data("label",a),geosite.ui_init_slider_label(t,i,r,s),geosite.ui_init_slider_slider(e,t,i,r,f,m,y,h),console.log(v,m,y,h,r)}}})},10)},geosite.controllers.controller_map=function(e,t,a,n,i,o){};var init_map=function(e){var t=L.map("map",{zoomControl:opt_b(e,"zoomControl",!1),minZoom:opt_i(e,"minZoom",3),maxZoom:opt_i(e,"maxZoom",18)});return t.setView([opt_i(e,["latitude","lat"],0),opt_i(e,["longitude","lon","lng","long"],0)],opt_i(e,["zoom","z"],0)),$.each(opt_j(e,"listeners"),function(e,a){t.on(e,a)}),t};geosite.controllers.controller_map_map=function(e,t,a,n,i,o,r,l,s,d,c){var p={click:function(e){var a=e.latlng,n={lat:a.lat,lon:a.lng};geosite.intend("clickedOnMap",n,t)},zoomend:function(e){var a={extent:c.map.getBounds().toBBoxString(),z:c.map.getZoom()};geosite.intend("viewChanged",a,t)},dragend:function(e){var a=c.map.getCenter(),n={extent:c.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.intend("viewChanged",n,t)},moveend:function(e){var a=c.map.getCenter(),n={extent:c.map.getBounds().toBBoxString(),lat:a.lat,lon:a.lng};geosite.intend("viewChanged",n,t)}},u=hasHashValue(["latitude","lat","longitude","lon","lng","zoom","z"]),g=r.view;c.map=init_map({zoomControl:d.controls.zoom,minZoom:d.view.minZoom,maxZoom:d.view.maxZoom,lat:g.lat,lon:g.lon,z:g.z,listeners:p});var f=geosite.layers.init_baselayers(c.map,d.baselayers);$.extend(c.baselayers,f);var m=d.baselayers[0].id;c.baselayers[m].addTo(c.map),geosite.intend("viewChanged",{baselayer:m},t),geosite.intend("layerLoaded",{type:"baselayer",layer:m},t),$.each(d.featurelayers,function(e,a){"popatrisk"!=e&&"context"!=e&&geosite.layers.init_featurelayer(e,a,t,c,d)});var y=function(e){console.log(e);var t=e.feature,a=angular.element("#geosite-main").scope(),n=a.state,o=n.filters.popatrisk,r=popup_templates.popatrisk,s=$.extend({},t.properties),c=months_short_3[n.month-1],p=months_long[n.month-1];if(s.month=p,"flood"==n.hazard){var u=o.rp;s.popatrisk=t.properties["RP"+u.toString(10)][c]}else if("cyclone"==n.hazard){for(var g=o.prob_class_max,f=0,m=0;m<t.properties.addinfo.length;m++){var y=t.properties.addinfo[m];y.category==o.category&&0!=y.prob_class_max&&y.prob_class_max<=g&&(console.log("matched prob_class",g),f+=y[c])}s.popatrisk=f}var h=d.featurelayers.popatrisk.popup.chart;return s.chartID=h.id,setTimeout(function(){var e=buildGroupsAndColumnsForAdmin2(h,l,t.properties.admin2_code),a={groups:e.groups,columns:e.columns,bullet_width:function(e,t){return"rp25"==e.id?6:12}};buildHazardChart(h,l,a)},1e3),i(r)(s)},h=function(e){console.log(e);var t=d.featurelayers.context,a=e.feature,n=geosite.popup.buildPopupTemplate(t.popup,t,a),o={layer:t,feature:{attributes:a.properties,geometry:{}}};return i(n)(o)};c.featurelayers.context=L.geoJson(s.data.geojson,{renderOrder:$.inArray("context",d.renderlayers),style:s.style["default"],hoverStyle:s.style.hover,onEachFeature:function(e,t){var a={maxWidth:300};t.bindPopup(h,a),t.on({mouseover:highlightFeature,mouseout:function(e){c.featurelayers.context.resetStyle(e.target)}})}}),c.featurelayers.popatrisk=L.geoJson(l.data.geojson,{renderOrder:$.inArray("popatrisk",d.renderlayers),style:l.style["default"],hoverStyle:l.style.hover,onEachFeature:function(e,t){var a={maxWidth:300};t.bindPopup(y,a),t.on({mouseover:highlightFeature,mouseout:function(e){c.featurelayers.popatrisk.resetStyle(e.target)},click:function(e){}})}}),geosite.layers.init_featurelayer_post(t,c,"popatrisk",c.featurelayers.popatrisk,d.featurelayers.popatrisk.visible),u||c.map.fitBounds(c.featurelayers.popatrisk.getBounds()),$("#geosite-map-sidebar-toggle-left").click(function(){$(this).toggleClass("sidebar-open sidebar-left-open"),$("#geosite-sidebar-left, #geosite-map").toggleClass("sidebar-open sidebar-left-open"),setTimeout(function(){c.map.invalidateSize({animate:!0,pan:!1})},2e3)}),t.$on("refreshMap",function(e,t){console.log("Refreshing map...");var a=t.state.view.baselayer;$.each(c.baselayers,function(e,t){var n=e==a;c.map.hasLayer(t)&&!n?c.map.removeLayer(t):!c.map.hasLayer(t)&&n&&c.map.addLayer(t)});var n=t.state.view.featurelayers;$.each(c.featurelayers,function(e,t){var a=-1!=$.inArray(e,n);c.map.hasLayer(t)&&!a?c.map.removeLayer(t):!c.map.hasLayer(t)&&a&&c.map.addLayer(t)});var i=$.grep(layersAsArray(c.featurelayers),function(e){return-1!=$.inArray(e.id,n)}),o=sortLayers($.map(i,function(e,t){return e.layer}),!0),r=($.map(c.baselayers,function(e,t){return{id:t,layer:e}}),$.map($.grep(layersAsArray(c.baselayers),function(e){return e.id==a}),function(e,t){return e.layer}));updateRenderOrder(r.concat(o)),c.featurelayers.popatrisk.setStyle(l.style["default"]),c.featurelayers.context.setStyle(s.style["default"]),setTimeout(function(){c.map._onResize()},0)}),t.$on("changeView",function(e,t){console.log("Refreshing map..."),void 0!=t.layer&&c.map.fitBounds(c.featurelayers[t.layer].getBounds())}),t.$on("openPopup",function(e,t){console.log("Refreshing map..."),void 0!=t.featureLayer&&void 0!=t.feature&&void 0!=t.location&&geosite.popup.openPopup(i,t.featureLayer,t.feature,t.location,c.map)})},geosite.controllers.controller_sidebar_sparc=function(e,t,a,n,i,o,r){angular.extend(this,a("GeositeControllerBase",{$element:t,$scope:e})),e.charts=o.charts,e.popatrisk_config=i,setTimeout(function(){$(t);if(void 0!=e.charts)for(var a=0;a<e.charts.length;a++){var n={};"drought"==e.charts[a].hazard&&(n.bullet_width=function(e,t){return"p6"==e.id?6:"p8"==e.id?8:16}),buildHazardChart(e.charts[a],e.popatrisk_config,n)}},10)},geosite.controllers.controller_main=function(e,t,a,n,i,o,r,l,s,d){e.state=geosite.init_state(o,l),e.live=d,e.$on("toggleModal",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.id,i=angular.element("#"+n).scope(),o={state:a.state};"static"in t&&(o=$.extend(o,t["static"])),$.each(t.dynamic,function(e,t){o[e]=angular.isArray(t)?extract(t,r):t}),i.$apply(function(){i=$.extend(i,o),setTimeout(function(){$("#"+n).modal("toggle")},0)})}),e.$on("stateChanged",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.$apply(function(){a.state=$.extend(a.state,t);var e=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(o,"",e),a.$broadcast("refreshMap",{state:a.state})})}),e.$on("filterChanged",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.$apply(function(){a.state.filters[t.layer]=$.extend(a.state.filters[t.layer],t.filter);var e=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(o,"",e),a.$broadcast("refreshMap",{state:a.state})})}),e.$on("selectStyle",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.$apply(function(){a.state.styles[t.layer]=t.style;var e=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(o,"",e),a.$broadcast("refreshMap",{state:a.state})})}),e.$on("viewChanged",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.state.view=$.extend(a.state.view,t);var n=buildPageURL("countryhazardmonth_detail",a.state);history.replaceState(o,"",n)}),e.$on("layerLoaded",function(e,t){var a=angular.element("#geosite-main").scope(),n=t.type,i=t.layer,o=void 0!=t.visible?t.visible:!0;"featurelayer"==n?o&&a.state.view.featurelayers.push(i):"baselayer"==n&&(a.state.view.baselayer=i)}),e.$on("showLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.layer;-1==$.inArray(n,a.state.view.featurelayers)&&(a.state.view.featurelayers.push(n),a.$broadcast("refreshMap",{state:a.state}))}),e.$on("hideLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),n=t.layer,i=$.inArray(n,a.state.view.featurelayers);-1!=i&&(a.state.view.featurelayers.splice(i,1),a.$broadcast("refreshMap",{state:a.state}))}),e.$on("showLayers",function(e,t){console.log("event",e),console.log("args",t);for(var a=angular.element("#geosite-main").scope(),n=t.layers,i=0;i<n.length;i++){var o=n[i];-1==$.inArray(o,a.state.view.featurelayers)&&(a.state.view.featurelayers.push(o),a.$broadcast("refreshMap",{state:a.state}))}}),e.$on("hideLayers",function(e,t){console.log("event",e),console.log("args",t);for(var a=angular.element("#geosite-main").scope(),n=t.layers,i=0;i<n.length;i++){var o=t.layers[i],r=$.inArray(o,a.state.view.featurelayers);-1!=r&&(a.state.view.featurelayers.splice(r,1),a.$broadcast("refreshMap",{state:a.state}))}}),e.$on("switchBaseLayer",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope();a.state.view.baselayer=t.layer,a.$broadcast("refreshMap",{state:a.state})}),e.$on("zoomToLayer",function(e,t){var a=angular.element("#geosite-main").scope(),n=t.layer,i=$.inArray(n,a.state.view.featurelayers);-1!=i&&a.$broadcast("changeView",{layer:n})}),e.$on("clickedOnMap",function(e,t){console.log("event",e),console.log("args",t);var a=angular.element("#geosite-main").scope(),o=a.state.view.z,l=a.state.view.featurelayers;console.log("visibleFeatureLayers",l);for(var s={},d={},c=[],p=0;p<l.length;p++){var u=r.featurelayers[l[p]];if(void 0!=u.wfs)for(var g={service:"wfs",version:u.wfs.version,request:"GetFeature",srsName:"EPSG:4326"},f=new L.LatLng(t.lat,t.lon),m=geosite.tilemath.point_to_bbox(t.lon,t.lat,o,4).join(","),y=u.wfs.layers||u.wms.layers||[],h=0;h<y.length;h++){typeName=y[h];var v=u.wfs.url+"?"+$.param($.extend(g,{typeNames:typeName,bbox:m}));c.push(v),d[typeName.toLowerCase()]=geosite.layers.aggregate_fields(u),s[typeName.toLowerCase()]=u}}i.all(geosite.http.build_promises(n,c)).then(function(e){var t=geosite.http.build_features(e,d);if(console.log("Features: ",t),t.length>0){var n=geosite.vecmath.getClosestFeatureAndLocation(t,f),i=s[n.feature.featuretype];a.$broadcast("openPopup",{featureLayer:i,feature:n.feature,location:{lon:n.location.lng,lat:n.location.lat}})}})})};var init_sparc_controller_main=function(e,t){geosite.init_controller(e,t,geosite.controllers.controller_main),$(".geosite-controller.geosite-sidebar.geosite-sidebar-left",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_sidebar_sparc)}),$(".geosite-controller.geosite-sidebar.geosite-sidebar-right",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_sidebar_editor)}),$(".geosite-controller.geosite-map",e).each(function(){geosite.init_controller($(this),t,geosite.controllers.controller_map),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-map-map",controller:geosite.controllers.controller_map_map},{selector:".geosite-controller.sparc-map-calendar",controller:geosite.controllers.controller_calendar},{selector:".geosite-controller.sparc-map-breadcrumb",controller:geosite.controllers.controller_breadcrumb},{selector:".geosite-controller.geosite-map-filter",controller:geosite.controllers.controller_filter},{selector:".geosite-controller.geosite-map-legend",controller:geosite.controllers.controller_legend}]),geosite.init_controllers($(this),t,[{selector:".geosite-controller.geosite-controller-modal",controller:geosite.controllers.controller_modal}])})};